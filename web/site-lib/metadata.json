{"createdTime":1758523802831,"shownInTree":["area/스프링/검증/검증-구현(일반)/v1.html","area/스프링/검증/검증-구현(일반)/v2.html","area/스프링/검증/검증-구현(일반)/v3.html","area/스프링/검증/검증-구현(일반)/v4.html","area/스프링/검증/검증-구현(일반)/v5.html","area/스프링/검증/검증-구현(일반)/v6.html","area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html","area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html","area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html","area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html","area/스프링/검증/검증-구현(bean)/v1.html","area/스프링/검증/검증-구현(bean)/v2.html","area/스프링/검증/검증-구현(bean)/v3.html","area/스프링/검증/검증-구현(bean)/v4(api).html","area/스프링/검증/검증이란.html","area/스프링/검증/메시지-키값-생성,-선택-방식.html","area/스프링/세션/무제.html","area/스프링/세션/세션의-생명-주기.html","area/스프링/세션/세션이란.html","area/스프링/객체-지향-프로그래밍이란.html","area/스프링/낙서장임.html","area/스프링/왜-스프링인가.html","area/스프링/조립,-설정자란-무엇인가.html","area/스프링/초기-설정-spring-initializer-을-이용한.html","area/스프링/프레임워크-vs-라이브러리.html","area/스프링/intellij-유용한-단축키(windows-기준).html","area/스프링/jpa-란-무엇인가.html","area/스프링/lombok-(롬복).html","area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","area/알고리즘-공부/소수(채-방식).html","area/알고리즘-공부/순열생성기.html","area/알고리즘-공부/알고리즘.html","area/알고리즘-공부/알고리즘-공부.html","area/알고리즘-공부/자료구조.html","area/알고리즘-공부/코딩-사이트별-난이도.html","area/알고리즘-공부/파이썬-커스텀-정렬.html","area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html","area/포트폴리오.html"],"attachments":["site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/293fd13dbca5a3e450ef.woff2","site-lib/fonts/085cb93e613ba3d40d2b.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/6155340132a851f6089e.svg","site-lib/media/2308ab1944a6bfa5c5b8.svg","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/media/favicon.png","site-lib/styles/snippets.css","site-lib/styles/obsidian.css","site-lib/styles/other-plugins.css","site-lib/styles/global-variable-styles.css","site-lib/styles/supported-plugins.css","site-lib/styles/main-styles.css","archive/media/제목-없는-다이어그램.drawio-2.png","archive/media/pasted-image-20250917134000.png","archive/media/pasted-image-20250707191531.png","archive/media/pasted-image-20250707190523.png","archive/media/pasted-image-20250707190416.png","archive/media/pasted-image-20250707190446.png","archive/media/pasted-image-20250707190821.png","archive/media/pasted-image-20250707190915.png","archive/media/제목-없는-다이어그램.drawio.png","archive/media/pasted-image-20241027171659.png","archive/media/pasted-image-20241028170514.png","archive/media/pasted-image-20241028170526.png","archive/media/pasted-image-20241028170540.png","archive/media/pasted-image-20250319173718.png","site-lib/rss.xml"],"allFiles":["area/포트폴리오.html","area/스프링/세션/세션의-생명-주기.html","area/스프링/세션/세션이란.html","area/스프링/세션/무제.html","area/스프링/왜-스프링인가.html","area/스프링/객체-지향-프로그래밍이란.html","area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html","area/스프링/검증/검증-구현(bean)/v4(api).html","area/스프링/검증/검증-구현(bean)/v3.html","area/스프링/검증/검증-구현(bean)/v2.html","area/스프링/검증/검증-구현(일반)/v2.html","area/스프링/검증/검증-구현(bean)/v1.html","area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html","area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html","area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html","area/스프링/검증/검증이란.html","area/스프링/검증/메시지-키값-생성,-선택-방식.html","area/스프링/검증/검증-구현(일반)/v6.html","area/스프링/검증/검증-구현(일반)/v5.html","area/스프링/검증/검증-구현(일반)/v3.html","area/스프링/검증/검증-구현(일반)/v4.html","area/스프링/검증/검증-구현(일반)/v1.html","archive/media/pasted-image-20250917134000.png","area/스프링/jpa-란-무엇인가.html","area/스프링/초기-설정-spring-initializer-을-이용한.html","archive/media/pasted-image-20250707191531.png","area/스프링/lombok-(롬복).html","archive/media/pasted-image-20250707190915.png","archive/media/pasted-image-20250707190821.png","archive/media/pasted-image-20250707190523.png","archive/media/pasted-image-20250707190446.png","archive/media/pasted-image-20250707190416.png","area/스프링/intellij-유용한-단축키(windows-기준).html","area/스프링/낙서장임.html","area/스프링/프레임워크-vs-라이브러리.html","area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","area/스프링/조립,-설정자란-무엇인가.html","archive/media/제목-없는-다이어그램.drawio.png","archive/media/제목-없는-다이어그램.drawio-2.png","area/알고리즘-공부/자료구조.html","area/알고리즘-공부/알고리즘.html","area/알고리즘-공부/알고리즘-공부.html","area/알고리즘-공부/파이썬-커스텀-정렬.html","area/알고리즘-공부/순열생성기.html","area/알고리즘-공부/소수(채-방식).html","area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html","area/알고리즘-공부/코딩-사이트별-난이도.html","archive/media/pasted-image-20250319173718.png","archive/media/pasted-image-20241028170540.png","archive/media/pasted-image-20241028170526.png","archive/media/pasted-image-20241028170514.png","archive/media/pasted-image-20241027171659.png","site-lib/scripts/graph-wasm.wasm","site-lib/fonts/94f2f163d4b698242fef.otf","site-lib/fonts/72505e6a122c6acd5471.woff2","site-lib/fonts/2d5198822ab091ce4305.woff2","site-lib/fonts/c8ba52b05a9ef10f4758.woff2","site-lib/fonts/cb10ffd7684cd9836a05.woff2","site-lib/fonts/293fd13dbca5a3e450ef.woff2","site-lib/fonts/085cb93e613ba3d40d2b.woff2","site-lib/fonts/b5f0f109bc88052d4000.woff2","site-lib/fonts/cbe0ae49c52c920fd563.woff2","site-lib/fonts/535a6cf662596b3bd6a6.woff2","site-lib/fonts/70cc7ff27245e82ad414.ttf","site-lib/fonts/454577c22304619db035.ttf","site-lib/fonts/52ac8f3034507f1d9e53.ttf","site-lib/fonts/05b618077343fbbd92b7.ttf","site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","site-lib/media/6155340132a851f6089e.svg","site-lib/media/2308ab1944a6bfa5c5b8.svg","site-lib/html/file-tree-content.html","site-lib/scripts/webpage.js","site-lib/scripts/graph-wasm.js","site-lib/scripts/graph-render-worker.js","site-lib/media/favicon.png","site-lib/styles/snippets.css","site-lib/styles/obsidian.css","site-lib/styles/other-plugins.css","site-lib/styles/global-variable-styles.css","site-lib/styles/supported-plugins.css","site-lib/styles/main-styles.css"],"webpages":{"area/스프링/검증/검증-구현(일반)/v1.html":{"title":"V1","icon":"","description":"-그냥 깡구현-\n<img alt=\"Pasted image 20250917134000.png\" src=\"archive/media/pasted-image-20250917134000.png\" target=\"_self\" style=\"width: 425px; max-width: 100%;\">Map을 사용해 오류를 저장 후 view에 넘긴다.Map&lt;String, String&gt; errors = new HashMap&lt;&gt;(); if(!StringUtils.hasText(item.getItemName())){ errors.put(\"itemName\", \"상품 이름은 필수입니다.\"); } if (!errors.isEmpty()){ model.addAttribute(\"errors\", errors); return \"validation/v1/addForm\"; }return \"redirect:/validation/v1/items/{itemId}\";view에선 받은 값을 확인해 HTML 생성&lt;div th:if=\"${errors?.containsKey('globalError')}\"&gt; &lt;p class=\"field-error\" th:text=\"${errors['globalError']}\"&gt;전체 오류 메시지&lt;/p&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=\"itemName\" th:text=\"#{label.item.itemName}\"&gt;상품명&lt;/label&gt; &lt;input type=\"text\" id=\"itemName\" th:field=\"*{itemName}\" th:class=\"${errors?.containsKey('itemName')} ? 'form-control field-error' : 'form-control'\" class=\"form-control\" placeholder=\"이름을 입력하세요\"&gt; &lt;div class=\"field-error\" th:if=\"${errors?.containsKey('itemName')}\" th:text=\"${errors['itemName']}\"&gt; 상품명 오류 &lt;/div&gt; &lt;/div&gt;","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"area/스프링/검증/검증-구현(일반)/v1.html","pathToRoot":"../../../..","attachments":["archive/media/pasted-image-20250917134000.png"],"createdTime":1758082437147,"modifiedTime":1758090866191,"sourceSize":1183,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V1.md","exportPath":"area/스프링/검증/검증-구현(일반)/v1.html","showInTree":true,"treeOrder":4,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(일반)/v2.html":{"title":"V2","icon":"","description":"-BindingResult 사용-bindingResult는 model.addAttribute로 값을 따로 넘겨줄 필요가 없다.\nbindingResult의 파라미터는 검증하는 대상의 파라미터 뒤에 위치해야 한다.public String addItemV1(@ModelAttribute Item item, BindingResult bindingResult, RedirectAttributes redirectAttributes, Model model) { // 검증 로직 if(!StringUtils.hasText(item.getItemName())){ bindingResult.addError(new FieldError(\"item\",\"itemName\",\"이름 필수.\")); } if (bindingResult.hasErrors()){ return \"validation/v2/addForm\"; }\treturn \"redirect:/validation/v2/items/{itemId}\";}FieldError 생성자 파라미터에 의한 차이\n3번째 파라미터에 view 에서 넘어오는 값을 지정해 주면 에러가 발생해 해당 화면으로 돌아가도 입력 값이 유지되도록 할 수 있다.\nbindingResult.addError(new FieldError(\"item\",\"itemName\",\"이름 필수.\")); // vsbindingResult.addError(new FieldError(\"item\",\"itemName\", item.getItemName(), false, null, null,\"이름 필수.\"));thymeleaf 코드에서 값 확인 방법\n글로벌 오류 : #fields.globalErrors()\n필드 오류 : th:errors=\"*{itemName}\"\n&lt;div th:if=\"${#fields.hasGlobalErrors()}\"&gt; &lt;p class=\"field-error\" th:each=\"err : ${#fields.globalErrors()}\" th:text=\"${err}\"&gt;글로벌 오류 메시지&lt;/p&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=\"itemName\" th:text=\"#{label.item.itemName}\"&gt;상품명&lt;/label&gt; &lt;input type=\"text\" id=\"itemName\" th:field=\"*{itemName}\" th:errorclass=\"field-error\" class=\"form-control\" placeholder=\"이름을 입력하세요\"&gt; &lt;div class=\"field-error\" th:errors=\"*{itemName}\"&gt; 상품명 오류 &lt;/div&gt; &lt;/div&gt;","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(일반)/v2.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758086483064,"modifiedTime":1758271220190,"sourceSize":1827,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V2.md","exportPath":"area/스프링/검증/검증-구현(일반)/v2.html","showInTree":true,"treeOrder":5,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(일반)/v3.html":{"title":"V3","icon":"","description":"-메시지, 국제화 적용-FieldError 생성자 5번째 파라미터에(codes) 메시지 키 값을 넣으면 메시지를 지정할 수 있다if(!StringUtils.hasText(item.getItemName())){ bindingResult.addError(new FieldError(\"item\",\"itemName\", item.getItemName(), false, new String[]{\"required.item.itemName\"}, null,null)); }#==FieldError== #Level1 required.item.itemName=상품 이름은 필수입니다. range.item.price=가격은 {0} ~ {1} 까지 허용합니다. max.item.quantity=수량은 최대 {0} 까지 허용합니다.thymeleaf 코드 유지&lt;div th:if=\"${#fields.hasGlobalErrors()}\"&gt; &lt;p class=\"field-error\" th:each=\"err : ${#fields.globalErrors()}\" th:text=\"${err}\"&gt;글로벌 오류 메시지&lt;/p&gt; &lt;/div&gt; &lt;div&gt; &lt;label for=\"itemName\" th:text=\"#{label.item.itemName}\"&gt;상품명&lt;/label&gt; &lt;input type=\"text\" id=\"itemName\" th:field=\"*{itemName}\" th:errorclass=\"field-error\" class=\"form-control\" placeholder=\"이름을 입력하세요\"&gt; &lt;div class=\"field-error\" th:errors=\"*{itemName}\"&gt; 상품명 오류 &lt;/div&gt; &lt;/div&gt;","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(일반)/v3.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758088804577,"modifiedTime":1758093042685,"sourceSize":1230,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V3.md","exportPath":"area/스프링/검증/검증-구현(일반)/v3.html","showInTree":true,"treeOrder":6,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(일반)/v4.html":{"title":"V4","icon":"","description":"-메시지, 국제화 적용-짠 이전에 한 거 다 필요 없다 bindingResult.rejectValue 메소드를 사용해 대체 가능\n필드 오류 지정 : rejectValue\n글로벌 오류 지정 : reject\nif(!StringUtils.hasText(item.getItemName())) { bindingResult.rejectValue(\"itemName\", \"required\"); //??? 아 }if(item.getPrice() != null &amp;&amp; item.getQuantity() != null){ int resultPrice = item.getPrice() * item.getQuantity(); if (resultPrice &lt; 10000){ bindingResult.reject(\"totalPriceMin\", new Object[]{10000, resultPrice}, null); } }그럼 어떤 방식으로 매칭되는가?\n오브젝트명 : @ModelAttribute Item item에서 item\nbindingResult.rejectValue(\"itemName\", \"required\"); 오류코드 : required\n필드명 : itemName 위 3가지 값을 이용해 오류 코드를 만들어내고, 이 코드로 메시지 값을 얻어낸다.\npublic String addItemV5(@ModelAttribute Item item, BindingResult bindingResult,thymeleaf 코드 유지&lt;div&gt; &lt;label for=\"itemName\" th:text=\"#{label.item.itemName}\"&gt;상품명&lt;/label&gt; &lt;input type=\"text\" id=\"itemName\" th:field=\"*{itemName}\" th:errorclass=\"field-error\" class=\"form-control\" placeholder=\"이름을 입력하세요\"&gt; &lt;div class=\"field-error\" th:errors=\"*{itemName}\"&gt; 상품명 오류 &lt;/div&gt; &lt;/div&gt;","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(일반)/v4.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758089326829,"modifiedTime":1758092848127,"sourceSize":1442,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V4.md","exportPath":"area/스프링/검증/검증-구현(일반)/v4.html","showInTree":true,"treeOrder":7,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(일반)/v5.html":{"title":"V5","icon":"","description":"-리팩토링 : 관심사의 분리-컨트롤러 코드가 에러 검증까지 하기에는 너무 많은 역할을 수행하기 때문에 따로 클래스를 파서 관심사를 분리\nValidator 인터페이스의 supports, validate 메소드를 구현하면 된다. supports : 오브젝트가 처리 할 수 있는지 검증\nvalidate : 실제 검증 코드 @Component public class ItemValidator implements Validator { @Override public boolean supports(Class&lt;?&gt; clazz) { return Item.class.isAssignableFrom(clazz); // 클래스나 인터페이스 상속했는지 체크 // Item 이 슈퍼클래스인가? 를 뭍는거임 } @Override public void validate(Object target, Errors errors) { Item item = (Item) target; // 검증 로직 if(!StringUtils.hasText(item.getItemName())) { errors.rejectValue(\"itemName\", \"required\"); //??? 아 } } }컨트롤러에서는 해당 검증기를 생성 후 @InitBinder를 사용해 매 컨트롤러 호출 전 검증기를 먼저 호출1private final ItemValidator itemValidator;23// 컨트롤러 호출 될 때 마다 먼저 호출되면서 검증기를 넣어 둠 4@InitBinder 5public void init(WebDataBinder dataBinder){ 6 dataBinder.addValidators(itemValidator); 7}89public String addItemV5(@ModelAttribute Item item, BindingResult bindingResult, RedirectAttributes redirectAttributes, Model model) { 10 11 if(itemValidator.supports(item.getClass())){ 12 itemValidator.validate(item, bindingResult); 13 }14 ...","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(일반)/v5.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758092853807,"modifiedTime":1758093615151,"sourceSize":1640,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V5.md","exportPath":"area/스프링/검증/검증-구현(일반)/v5.html","showInTree":true,"treeOrder":8,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(일반)/v6.html":{"title":"V6","icon":"","description":"-리팩토링 : 관심사의 분리 + @-가장 맨 앞에 @Validated 넣으면 스프링이 자동으로 검수 수행1private final ItemValidator itemValidator;23// 컨트롤러 호출 될 때 마다 먼저 호출되면서 검증기를 넣어 둠 4@InitBinder 5public void init(WebDataBinder dataBinder){ 6 dataBinder.addValidators(itemValidator); 7}89public String addItemV6(@Validated @ModelAttribute Item item, BindingResult bindingResult, RedirectAttributes redirectAttributes, Model model) { 10 11 if (bindingResult.hasErrors()){ 12 return \"validation/v2/addForm\"; 13 }14 ...","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(일반)/v6.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758093675578,"modifiedTime":1758093850064,"sourceSize":618,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V6.md","exportPath":"area/스프링/검증/검증-구현(일반)/v6.html","showInTree":true,"treeOrder":9,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html":{"title":"바인딩에 실패한 경우(타입 오류)","icon":"","description":"BeanValidator는 바인딩에 실패한 필드는 BeanValidation을 적용하지 않음\n당연한 현상인 것이 타입 변환에 성공해야지 필드에 값을 할당할 수 있기 때문\n(일단 모델 객체에 바인딩 받는 값이 정상으로 들어와야 검증도 의미가 있다.)\n@ModelAttribute 데이터 획득\n각각의 필드 타입 변환시도\n변환에 성공한 필드만 BeanValidation 적용 타입 변환 시도 실패 시 typeMismatch FieldError 추가 해당 필드는 검증X 사용자가 같은 항목을 여러 번 수정하는 것을 최소화하기 때문에 클라이언트 사이드 검증이 중요","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html","pathToRoot":"../../../..","attachments":[],"createdTime":1758266298232,"modifiedTime":1758266784659,"sourceSize":651,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/바인딩에 실패한 경우(타입 오류).md","exportPath":"area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html","showInTree":true,"treeOrder":11,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html":{"title":"애노테이션 기반 검증","icon":"","description":"-애노테이션 사용-\n대부분의 검증 기능은 빈 값, 크기와 같은 단순한 검증을 수행한다.\n이러한 단순한 기능을 매번 작성하는 것은 상당히 번거롭다.\n그래서 스프링이 제공하는 애노테이션으로 퉁침글로벌 Validator를 직접 등록하면 스프링 부트는 Bean Validator를 글로벌 Validator 로 등록하지 않는다\n글로벌 검증기가 있으면 애노테이션 기반 검증기가 동작하지 않는다.검증 애노테이션 모음\n<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://docs.jboss.org/hibernate/validator/6.2/reference/en-US/html_single/#validator-defineconstraints-spec\" target=\"_self\">https://docs.jboss.org/hibernate/validator/6.2/reference/en-US/html_single/#validator-defineconstraints-spec</a>build.gradle에 해당 종속성 추가(스프링 전용 애노테이션을 사용하기 위한)implementation 'org.springframework.boot:spring-boot-starter-validation'@Validated : 스프링 전용 검증 애노테이션\n@Valid : 자바 표준 검증 애노테이션@Validated 는 groups 이라는 기능을 포함하고 있다.\n<br><a class=\"internal-link\" data-href=\"./V2\" href=\"area/스프링/검증/검증-구현(bean)/v2.html\" target=\"_self\" rel=\"noopener nofollow\">groups</a>이라는 기능은 후술\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["area/스프링/검증/검증-구현(bean)/v2.html"],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758266146687,"modifiedTime":1758332058512,"sourceSize":1026,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/애노테이션 기반 검증.md","exportPath":"area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html","showInTree":true,"treeOrder":12,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html":{"title":"오브젝트 오류(글로벌)","icon":"","description":"특정 필드가 아닌 오브젝트 관련 오류를 처리하는 방법은 @ScriptAssert() 을 사용하면 되기는 한다. @Data@ScriptAssert(lang = \"javascript\", script = \"_this.price * _this.quantity &gt;= 10000\")public class Item { ... }그런데 너무 제약이 많고 복잡하다. 특히 현시점에서 이 방식을 사용하려면 지금은 사용하지 않는 nashorn-core를 추가해야 한다.\n사용하기 편한 거도 아니고, 수식에 문제가 있어도 바로 알 수 없으므로 이 방식을 사용하는 것은 추천되지 않는다.implementation 'org.openjdk.nashorn:nashorn-core:15.3그렇기 때문에 오브젝트 오류 부분은 자바 코드로 작성하자if (item.getPrice() != null &amp;&amp; item.getQuantity() != null) { int resultPrice = item.getPrice() * item.getQuantity();\tif (resultPrice &lt; 10000) { bindingResult.reject(\"totalPriceMin\", new Object[]{10000, resultPrice}, null);\t}}","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html","pathToRoot":"../../../..","attachments":[],"createdTime":1758267536217,"modifiedTime":1758268301430,"sourceSize":996,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/오브젝트 오류(글로벌).md","exportPath":"area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html","showInTree":true,"treeOrder":13,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html":{"title":"Bean Validation의 에러 코드(메시지)","icon":"","description":"에러 코드 메시지 생성 방식은 스프링의 메시지 생성 방식과 유사하다\nNotBlank : 오류 코드(애노테이션과 같음)\nitem : BindingResult 검증 하는 대상명(view로 넘어가는 이름)\nitemName : 검증하는 변수명@NotBlank\nNotBlank.item.itemName\nNotBlank.itemName\nNotBlank.java.lang.String\nNotBlank\n@Range\nRange.item.price\nRange.price\nRange.java.lang.Integer\nRange\n메시지 등록NotBlank={0} 공백X Range={0}, {2} ~ {1} 허용 Max={0}, 최대 {1}{0}은 필드명, {n}은 각각의 애노테이션마다 다름","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html","pathToRoot":"../../../..","attachments":[],"createdTime":1758266809805,"modifiedTime":1758267489798,"sourceSize":611,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/Bean Validation의 에러 코드(메시지).md","exportPath":"area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html","showInTree":true,"treeOrder":14,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/v1.html":{"title":"V1","icon":"","description":"모델에 검증 애노테이션 추가@Data public class Item { @NotNull private Long id; @NotBlank private String itemName; @NotNull @Range(min = 1000, max = 1000000) private Integer price; @NotNull @Max(value = 9999) private Integer quantity;검증을 원하는 파라미터에 @Validated 추가public String addItem(@Validated @ModelAttribute Item item, BindingResult bindingResult, ...) {","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/v1.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758185886376,"modifiedTime":1758270451788,"sourceSize":507,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V1.md","exportPath":"area/스프링/검증/검증-구현(bean)/v1.html","showInTree":true,"treeOrder":15,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/v2.html":{"title":"V2","icon":"","description":"-검증 조건이 다른 경우-\ngroups 기능을 사용\n<a class=\"internal-link\" data-href=\"./V3\" href=\"area/스프링/검증/검증-구현(bean)/v3.html\" target=\"_self\" rel=\"noopener nofollow\">DTO를 사용하는 방법</a>이 더 좋다\n모델이 너무 많은 기능을 수행하기 때문에 유지보수가 어려움(만약에 검증 조건이 100가지라면?)\n데이터베이스에 저장되는 객체를 외부에 노출하지 말자. 꼭 필요한 데이터만 넘길 것\n그룹을 지정할 인터페이스를 생성한다(다른 파일에!)public interface SaveCheck { }public interface UpdateCheck { }모델의 검증 애노테이션에 그룹을 추가@Data public class Item { @NotNull(groups = UpdateCheck.class) private Long id; @NotBlank(groups = {SaveCheck.class, UpdateCheck.class}) private String itemName; @NotNull(groups = {SaveCheck.class, UpdateCheck.class}) @Range(min = 1000, max = 1000000) private Integer price; @NotNull(groups = {SaveCheck.class, UpdateCheck.class}) @Max(value = 9999, groups = {SaveCheck.class}) private Integer quantity;컨트롤러 코드의 @Validated에 그룹을 지정public String addItem2(@Validated(SaveCheck.class) @ModelAttribute Item item, ...public String editV2(@PathVariable Long itemId, @Validated(value = UpdateCheck.class) @ModelAttribute Item item, ...","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["area/스프링/검증/검증-구현(bean)/v3.html"],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/v2.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758185886376,"modifiedTime":1758271321575,"sourceSize":1345,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V2.md","exportPath":"area/스프링/검증/검증-구현(bean)/v2.html","showInTree":true,"treeOrder":16,"backlinks":["area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html"],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/v3.html":{"title":"V3","icon":"","description":"-DTO 사용-\n외부로 나가는 데이터는 DTO를 사용해 꼭 필요한 정보만 줘야 한다.\n관심사 분리 : 만약 API 스팩 같은 요구 데이터가 변하였으면? 데이터베이스랑 엮여 있는 객체를 수정할 수는 없다. 나중에 가서 수정하는 것 보다. 미리미리 구분하는 것이 정신 건강에 좋다.\n데이터 노출 관리 : 실수로 중요 데이터를 전송하면 위험하다. 그룹 회원 이름만 보내면 되는데 집 주소, 전화번호 등을 같이 보내는 것은 옳지 않다.\nDTO 생성(다른 파일로)@Data public class ItemSaveForm { @NotBlank private String itemName; @NotNull @Range(min = 1000,max = 1000000) private Integer price; @NotNull @Max(9999) private Integer quantity; }@Data public class ItemUpdateForm { @NotNull private Long id; @NotBlank private String itemName; @NotNull @Range(min = 1000,max = 1000000) private Integer price; private Integer quantity; }@ModelAttribute의 객체를 다르게 한다. 이 경우 view 에 들어가는 이름이 달라진다\n필요시 따로 명칭을 지정한다.\n프로젝트가 커지면 객체 변환 과정을 자동화해주는 도구도 고려해야 한다.(MapStruct, ModelMapper)public String addItem(@Validated @ModelAttribute(\"item\") ItemSaveForm form, BindingResult bindingResult, ...){\t...\tItem item = new Item(); item.setItemName(form.getItemName()); item.setPrice(form.getPrice()); item.setQuantity(form.getQuantity());\t...}public String edit(@PathVariable Long itemId, @Validated @ModelAttribute(\"item\") ItemUpdateForm form, BindingResult bindingResult){\t...\tItem itemParam = new Item(); itemParam.setItemName(form.getItemName()); itemParam.setPrice(form.getPrice()); itemParam.setQuantity(form.getQuantity());\t...}","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/v3.html","pathToRoot":"../../../..","attachments":[],"createdTime":1758271257527,"modifiedTime":1758272569527,"sourceSize":1963,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V3.md","exportPath":"area/스프링/검증/검증-구현(bean)/v3.html","showInTree":true,"treeOrder":17,"backlinks":["area/스프링/검증/검증-구현(bean)/v2.html"],"type":"markdown"},"area/스프링/검증/검증-구현(bean)/v4(api).html":{"title":"V4(API)","icon":"","description":"API는 @ModelAttribute 가 아닌 @RequestBody를 사용하는데 약간의 문제가 있다.public Object addItem(@RequestBody @Validated ItemSaveForm form, BindingResult bindingResult){ log.info(\"API 컨트롤러 호출\");데이터를 잘못 넣으면 에러가 발생해 모든 필드에서 검증이 되지 않는다.in{ \"itemName\":\"hello\", \"price\":\"qqq\", \"quantity\":1000}out{ \"timestamp\": \"2025-09-19T09:08:19.542+00:00\", \"status\": 400, \"error\": \"Bad Request\", \"path\": \"/validation/api/items/add\"}","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증-구현(bean)/v4(api).html","pathToRoot":"../../../..","attachments":[],"createdTime":1758272615299,"modifiedTime":1758273464518,"sourceSize":1204,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V4(API).md","exportPath":"area/스프링/검증/검증-구현(bean)/v4(api).html","showInTree":true,"treeOrder":18,"backlinks":[],"type":"markdown"},"area/스프링/검증/검증이란.html":{"title":"검증이란","icon":"","description":"사용자의 입력을 서버에서 처리, 저장하기 전 값이 정상적인 범주인지 확인하고 조치하는 과정왜 검증을 해야 할까?\n사용자가 입력값을 잘못 주었을 때 에러 페이지가 나타난다면 나라도 안 씀 ㅋㅋ\n사용자가 입력값을 잘못 주었을 때 저장되지 않은 값들이 다 날아가면 나라도 안 씀 특별한 기준이 있는 경우 ex.) 글자 수 제한, 가격 범위, 값 잘못 입력 등등 왜 서버 사이트에서 검증을 해야 할까?\n클라이언트의 코드는 언제라도 조작될 수 있기 때문\nXSS 또는 SQL 주입 등의 공격을 막기 위해서는 서버 단에서 입력 값을 반드시 검증해야 함\n주의할 점\n서버만으로 검증하면 즉각적인 고객 사용성이 부족해짐\nAPI 방식을 사용한다면 API 스펙을 잘 정의해서 응답 결과에 남겨주어야 함\n","aliases":["검증이란?"],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/검증이란.html","pathToRoot":"../../..","attachments":[],"createdTime":1758012383991,"modifiedTime":1758100487333,"sourceSize":953,"sourcePath":"Area/스프링/검증/검증이란.md","exportPath":"area/스프링/검증/검증이란.html","showInTree":true,"treeOrder":19,"backlinks":[],"type":"markdown"},"area/스프링/검증/메시지-키값-생성,-선택-방식.html":{"title":"메시지 키값 생성, 선택 방식","icon":"","description":"BindingResult은 오류 메시지 키 값을 생성하는 기능 또한 수행한다그럼 어떤 방식으로 생성되는가?\n오브젝트명 : @ModelAttribute Item item에서 item\nbindingResult.rejectValue(\"itemName\", \"required\"); 오류코드 : required\n필드명 : itemName 위 3가지 값을 이용해 오류 코드를 만들어낸다.\npublic String addItemV5(@ModelAttribute Item item, BindingResult bindingResult,만들어내는 키 값과 선택 우선순위는 다음과 같다\n1순위 (구체적)\n오류코드.오브젝트명.필드명\nex) required.item.itemName\n2순위\n오류코드.필드명\nex) required.itemName\n3순위\n오류코드.필드타입\nex) required.java.lang.\n4순위 (범용적)\n오류코드\nex) required\n이거 4개 만드는 것은 확정임!!\n어떤 오류는 구체적으로, 어떤 거는 범용적으로 정하는 것은 오류코드 properties에서 결정\nproperties에 자세한 것을 적으면 자세하게 나오고 범용적인 거만 적으면 범용적으로 나옴\n이 오류코드 properties만 수정하면 클라이언트의 글자 바꾸기 떼쓰기를 수월하게 조치할 수 있음\nThymeleaf가 메시지를 찾는 방법\n타임리프는 렌더링을 시작할 때 스프링으로부터 Model 객체를 전달받고, 이 객체에 Result 객체가 있음\nth:errors의 값*{itemName} == #{item.itemName}이니 오브젝트 이름이 item이고 필드이름이 itemName인 메시지 키 값을 찾음 왜 오류코드는 없어도 되는가? 애초에 해당 오류가 없으면 Result에 없을 것이기 때문\nth:errors를 사용하는 이유는 단순히 에러 메시지를 어디에 출력할지 위치를 지정한 것이다. Result로부터 FieldError 객체들의 리스트를 전달받고 리스트가 비어있지 않으면\nFieldError를 MessageSource에 전달하여 메시지 해석 요청\n&lt;div&gt; &lt;label for=\"itemName\" th:text=\"#{label.item.itemName}\"&gt;상품명&lt;/label&gt; &lt;input type=\"text\" id=\"itemName\" th:field=\"*{itemName}\" th:errorclass=\"field-error\" class=\"form-control\" placeholder=\"이름을 입력하세요\"&gt; &lt;div class=\"field-error\" th:errors=\"*{itemName}\"&gt; 상품명 오류 &lt;/div&gt; &lt;/div&gt;","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/검증/메시지-키값-생성,-선택-방식.html","pathToRoot":"../../..","attachments":[],"createdTime":1758093930812,"modifiedTime":1758100391761,"sourceSize":2324,"sourcePath":"Area/스프링/검증/메시지 키값 생성, 선택 방식.md","exportPath":"area/스프링/검증/메시지-키값-생성,-선택-방식.html","showInTree":true,"treeOrder":20,"backlinks":[],"type":"markdown"},"area/스프링/세션/무제.html":{"title":"무제","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://kkongchii.tistory.com/entry/Spring-Boot-%EC%A0%95%EC%A0%81-%ED%8C%8C%EC%9D%BC-%EB%A1%9C%EB%93%9C-%EC%8B%9C-URL%EC%97%90-Jsessionid-%EB%B6%99%EB%8A%94-%EA%B2%BD%EC%9A%B0-%ED%95%B4%EA%B2%B0\" target=\"_self\">https://kkongchii.tistory.com/entry/Spring-Boot-%EC%A0%95%EC%A0%81-%ED%8C%8C%EC%9D%BC-%EB%A1%9C%EB%93%9C-%EC%8B%9C-URL%EC%97%90-Jsessionid-%EB%B6%99%EB%8A%94-%EA%B2%BD%EC%9A%B0-%ED%95%B4%EA%B2%B0</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/세션/무제.html","pathToRoot":"../../..","attachments":[],"createdTime":1758354350952,"modifiedTime":1758354353323,"sourceSize":195,"sourcePath":"Area/스프링/세션/무제.md","exportPath":"area/스프링/세션/무제.html","showInTree":true,"treeOrder":22,"backlinks":[],"type":"markdown"},"area/스프링/세션/세션의-생명-주기.html":{"title":"세션의 생명 주기","icon":"","description":"세션은 무한정 유지해서는 안 된다.\n보안과 리소스 관리를 위해 주기적으로 제거해야 한다.생성\n사용자가 사이트에 접속하여 세션 ID 를 발급할 때 생성\n유지\n사용자가 사이트 내에서 계속 활동하면 (HTTP 메시지 전송), 설정된 만료 시간이 계속 갱신\n소멸\n브라우저 종료 브라우저를 닫으면 세션 ID 쿠키가 사라져 연결 종료(서버에서 설정) 타임아웃 일정 시간 동안 요청을 보내지 않으면 서버가 세션을 삭제 명시적 로그아웃 로그아웃 버튼 등을 눌러 서버로 세션 삭제 요청을 보냄 ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/세션/세션의-생명-주기.html","pathToRoot":"../../..","attachments":[],"createdTime":1758519739847,"modifiedTime":1758523149272,"sourceSize":657,"sourcePath":"Area/스프링/세션/세션의 생명 주기.md","exportPath":"area/스프링/세션/세션의-생명-주기.html","showInTree":true,"treeOrder":23,"backlinks":[],"type":"markdown"},"area/스프링/세션/세션이란.html":{"title":"세션이란","icon":"","description":"비연속적인 HTTP 환경에서 연속적인 서비스를 제공하기 위한 기법\n주로 쿠키를 기반으로 동작한다.로그인 상태 유지 등의 기능을 제공한다.","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/세션/세션이란.html","pathToRoot":"../../..","attachments":[],"createdTime":1758519498124,"modifiedTime":1758519500473,"sourceSize":810,"sourcePath":"Area/스프링/세션/세션이란.md","exportPath":"area/스프링/세션/세션이란.html","showInTree":true,"treeOrder":24,"backlinks":[],"type":"markdown"},"area/스프링/객체-지향-프로그래밍이란.html":{"title":"객체 지향 프로그래밍이란","icon":"","description":"컴퓨터 부품을 갈아 끼우듯이(ex. ssd or hhd)\n프로그래밍을 할 때 컴포넌트를(여러 기능) 쉽고 유연하게 변경할 수 있도록 개발하는 방식<img alt=\"제목 없는 다이어그램.drawio 2.png\" src=\"archive/media/제목-없는-다이어그램.drawio-2.png\" target=\"_self\" style=\"width: 650px; max-width: 100%;\">역할(인터페이스)과 구현(클래스)로 기능을 분리해 구현클라이언트(다른 기능)는 인터페이스를 통해 어떤 기능을 받나 알 수 있으나 어떻게 받는지는 알 필요가 없음\n예를 들어 사용자 데이터를 받을 때 데이터베이스에서 받는가 임시로 직접 입력받은 데이터인지 알 필!요가 없다.기능은 자기 자신의 기능만 책임지면 되고, 클라이언트에 영향을 주지 않고 추가적인 수정을 할 수 있음가장 중요하게 생각하여야 할 것은 인터페이스의 변화가 없게 설계를 해야 한다\n인터페이스가 변하면 그 하위 모든 기능을 뒤집어엎어야 하기 때문이다.<br>좋은 객체 지향 설계를 위한 원칙이 <a class=\"internal-link\" data-href=\"./SOLID 좋은 객체 지향 설계를 위한 5 원칙\" href=\"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html\" target=\"_self\" rel=\"noopener nofollow\">SOLID</a>다객체 지향의 핵심은 다형성이나 다형성만으로는 쉽게 부품을 갈아 끼우듯이 개발을 할 수 없다.\n왜냐하면 구현 객체를 변경할 때 클라이언트 코드도 변경되기 때문이다\n즉 OCP, DIP를 지킬 수 없다.<br>\n<a class=\"internal-link\" data-href=\"조립, 설정자란 무엇인가\" href=\"area/스프링/조립,-설정자란-무엇인가.html\" target=\"_self\" rel=\"noopener nofollow\">무언가 더 필요하다.</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","area/스프링/조립,-설정자란-무엇인가.html"],"author":"","coverImageURL":".","fullURL":"area/스프링/객체-지향-프로그래밍이란.html","pathToRoot":"../..","attachments":["archive/media/제목-없는-다이어그램.drawio-2.png"],"createdTime":1751623843107,"modifiedTime":1758332788575,"sourceSize":1395,"sourcePath":"Area/스프링/객체 지향 프로그래밍이란.md","exportPath":"area/스프링/객체-지향-프로그래밍이란.html","showInTree":true,"treeOrder":25,"backlinks":["area/스프링/왜-스프링인가.html"],"type":"markdown"},"area/스프링/낙서장임.html":{"title":"낙서장임","icon":"","description":"스프링의 핵심 개념\n객체 기반 언어인 자바 기반 프레임워크\n좋은 객체 기반 애플리케이션을 개발할 수 있게 지원좋은 객체 지향 프로그래밍이란?\n코드를 갈아 끼우듯이\n컴포넌트를 쉽고 유연하게 변경하면서 개발할 수 있는 방법으로\n역할과 구현으로 세상을 구분클라이언트는 자동차의 내부 구조를 알 필요가 없음\n대상의 내용을 주지 않고 추가 기능을 제공할 수 있다\n예를 들어","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/낙서장임.html","pathToRoot":"../..","attachments":[],"createdTime":1749803965948,"modifiedTime":1751869676153,"sourceSize":518,"sourcePath":"Area/스프링/낙서장임.md","exportPath":"area/스프링/낙서장임.html","showInTree":true,"treeOrder":26,"backlinks":[],"type":"markdown"},"area/스프링/왜-스프링인가.html":{"title":"왜 스프링인가","icon":"","description":"스프링은 <a class=\"internal-link\" data-href=\"객체 지향 프로그래밍이란\" href=\"area/스프링/객체-지향-프로그래밍이란.html\" target=\"_self\" rel=\"noopener nofollow\">객체 지향 프로그래밍</a>을 위해 탄생한 <a class=\"internal-link\" data-href=\"프레임워크 vs 라이브러리\" href=\"area/스프링/프레임워크-vs-라이브러리.html\" target=\"_self\" rel=\"noopener nofollow\">프레임워크</a>로\n좋은 객체 기반 애플리케이션을 개발하는데 특화되어 있다.<br>스프링은 의존관계 주입 (Dependency injection,DI) 컨테이너를 제공해 <a class=\"internal-link\" data-href=\"./SOLID 좋은 객체 지향 설계를 위한 5 원칙\" href=\"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html\" target=\"_self\" rel=\"noopener nofollow\">OCP, DIP</a>를 가능하게 지원한다.\n이를 통해 클라이언트 코드의 변경 없이 확장할 수 있다.","aliases":["왜 스프링인가?"],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["area/스프링/객체-지향-프로그래밍이란.html","area/스프링/프레임워크-vs-라이브러리.html","area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html"],"author":"","coverImageURL":"","fullURL":"area/스프링/왜-스프링인가.html","pathToRoot":"../..","attachments":[],"createdTime":1749803965948,"modifiedTime":1758332831513,"sourceSize":546,"sourcePath":"Area/스프링/왜 스프링인가.md","exportPath":"area/스프링/왜-스프링인가.html","showInTree":true,"treeOrder":27,"backlinks":[],"type":"markdown"},"area/스프링/조립,-설정자란-무엇인가.html":{"title":"조립, 설정자란 무엇인가","icon":"","description":"","aliases":["조립 설정자란 무엇인가?"],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/조립,-설정자란-무엇인가.html","pathToRoot":"../..","attachments":[],"createdTime":1751698404742,"modifiedTime":1751698433625,"sourceSize":55,"sourcePath":"Area/스프링/조립, 설정자란 무엇인가.md","exportPath":"area/스프링/조립,-설정자란-무엇인가.html","showInTree":true,"treeOrder":28,"backlinks":["area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","area/스프링/객체-지향-프로그래밍이란.html"],"type":"markdown"},"area/스프링/초기-설정-spring-initializer-을-이용한.html":{"title":"초기 설정 spring initializer 을 이용한","icon":"","description":"<a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://start.spring.io/\" target=\"_self\">https://start.spring.io/</a><br><img alt=\"Pasted image 20250707191531.png\" src=\"archive/media/pasted-image-20250707191531.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"area/스프링/초기-설정-spring-initializer-을-이용한.html","pathToRoot":"../..","attachments":["archive/media/pasted-image-20250707191531.png"],"createdTime":1751883266712,"modifiedTime":1751883333951,"sourceSize":62,"sourcePath":"Area/스프링/초기 설정 spring initializer 을 이용한.md","exportPath":"area/스프링/초기-설정-spring-initializer-을-이용한.html","showInTree":true,"treeOrder":29,"backlinks":[],"type":"markdown"},"area/스프링/프레임워크-vs-라이브러리.html":{"title":"프레임워크 vs 라이브러리","icon":"","description":"프레임워크는 내가 작성한 코드를 제어하고 대신 실행(ex. JUnit)\n라이브러리는 내가 작성한 코드가 직접 제어의 흐름을 담당(ex. PyTorch)","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/프레임워크-vs-라이브러리.html","pathToRoot":"../..","attachments":[],"createdTime":1751867633352,"modifiedTime":1751867711690,"sourceSize":176,"sourcePath":"Area/스프링/프레임워크 vs 라이브러리.md","exportPath":"area/스프링/프레임워크-vs-라이브러리.html","showInTree":true,"treeOrder":30,"backlinks":["area/스프링/왜-스프링인가.html"],"type":"markdown"},"area/스프링/intellij-유용한-단축키(windows-기준).html":{"title":"IntelliJ 유용한 단축키(windows 기준)","icon":"","description":"CTRL + ALT + v : 입력값이 있을 때 변수 생성","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/intellij-유용한-단축키(windows-기준).html","pathToRoot":"../..","attachments":[],"createdTime":1751881151382,"modifiedTime":1751881234533,"sourceSize":54,"sourcePath":"Area/스프링/IntelliJ 유용한 단축키(windows 기준).md","exportPath":"area/스프링/intellij-유용한-단축키(windows-기준).html","showInTree":true,"treeOrder":31,"backlinks":[],"type":"markdown"},"area/스프링/jpa-란-무엇인가.html":{"title":"JPA 란 무엇인가","icon":"","description":"JPA(Java Persistence API)는 JAVA 애플리케이션과 JDBC 사이에서 동작하는 관리자로객체의 영속성을 관리해주는 역할을 수행한다.자바 ORM 표준 JPA 프로그래밍 - 기본편 섹선 2 보면서 추가 정리 요망","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/스프링/jpa-란-무엇인가.html","pathToRoot":"../..","attachments":[],"createdTime":1752743845826,"modifiedTime":1752744093814,"sourceSize":254,"sourcePath":"Area/스프링/JPA 란 무엇인가.md","exportPath":"area/스프링/jpa-란-무엇인가.html","showInTree":true,"treeOrder":32,"backlinks":[],"type":"markdown"},"area/스프링/lombok-(롬복).html":{"title":"lombok (롬복)","icon":"","description":"여러 번 만들어야 하는 귀찮은 요소를 자동화해주는 프레임워크 종속성에 lombok을 추가\n<img alt=\"Pasted image 20250707190523.png\" src=\"archive/media/pasted-image-20250707190523.png\" target=\"_self\" style=\"width: 450px; max-width: 100%;\">\n플러그인에서 lombok을 설치<br>\n<img alt=\"Pasted image 20250707190416.png\" src=\"archive/media/pasted-image-20250707190416.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">\n어노테이션 프로세서에서 어노테이션 처리 활성화<br>\n<img alt=\"Pasted image 20250707190446.png\" src=\"archive/media/pasted-image-20250707190446.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\"> 클래스에 @Getter @Setter 을 붙여 설정<br>\n<img alt=\"Pasted image 20250707190821.png\" src=\"archive/media/pasted-image-20250707190821.png\" target=\"_self\" style=\"width: 350px; max-width: 100%;\">\n변수명 앞에 set or get 을 붙여 사용<br>\n<img alt=\"Pasted image 20250707190915.png\" src=\"archive/media/pasted-image-20250707190915.png\" target=\"_self\" style=\"width: 375px; max-width: 100%;\"> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"설치 방법","level":2,"id":"설치_방법_0"},{"heading":"Getter Setter","level":2,"id":"Getter_Setter_0"}],"links":[],"author":"","coverImageURL":".","fullURL":"area/스프링/lombok-(롬복).html","pathToRoot":"../..","attachments":["archive/media/pasted-image-20250707190523.png","archive/media/pasted-image-20250707190416.png","archive/media/pasted-image-20250707190446.png","archive/media/pasted-image-20250707190821.png","archive/media/pasted-image-20250707190915.png"],"createdTime":1751882328484,"modifiedTime":1751882959090,"sourceSize":567,"sourcePath":"Area/스프링/lombok (롬복).md","exportPath":"area/스프링/lombok-(롬복).html","showInTree":true,"treeOrder":33,"backlinks":[],"type":"markdown"},"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html":{"title":"SOLID 좋은 객체 지향 설계를 위한 5 원칙","icon":"","description":" 단일 책임 원칙 (Single Responsibility Principle, SRP)\n한 클래스는 하나의 책임만 가져야 한다\n하나의 책임이라는 모호한 말은 문맥과 상황에 따라 다르게 적용된다\n중요한 것은 변경이 있을 때 파급이 적어야 한다는 것이다\n예를 들어 할인 정책 등을 변경했는데 SQL 코드가 변해야 한다면 원칙을 지키지 못하였다고 할 수 있다. 개방-폐쇄 원칙 (Open-Closed Principle, OCP)\n소프트웨어 요소는 확장에는 열려 있으나 변경에는 닫혀 있어야 한다\n다형성을 이용하면 수정을 하지 않고 확장을 해야 한다는 이상한 법칙을 지킬 수 있다.\n즉 인터페이스를 구현한 새 클래스를 만들어서 새로운 기능을 구현\n하지만 이 방법을 적용하면 OCP를 지키지 못하는 경우가 생긴다\nOCP를 지키기 위해 객체를 설정하고 관계를 맺어주는 별도의 <a class=\"internal-link\" data-href=\"조립, 설정자란 무엇인가\" href=\"area/스프링/조립,-설정자란-무엇인가.html\" target=\"_self\" rel=\"noopener nofollow\">조립, 설정자</a>가 필요하다 리스코프 치환 원칙 (Liskov Substitution Principle, LSP)\n프로그램의 객체는 프로그램의 정확성을 깨트리지 않으면서 하위 타입의 인스턴스로 바꿀 수 있어야 한다\n기능적으로 규약을 보장해야 한다는 의미로\n예를 들어 자동차 인터페이스의 엑셀은 동력을 제동하는 기능으로 타 기능으로 구현(와이퍼 작동)하면 안 된다는 의미이다. 인터페이스 분리 원칙 (Interface Segregation Principle, ISP)\n특정 클라이언트를 위한 인터페이스 여러 개가 범용 인터페이스보다 낫다\n예를 들어 자동차 인터페이스를 운전, 정비, 속도계 등등의 인터페이스들로 분리하면 정비 인터페이스가 변해도 타 인터페이스에 영향이 가지 않는다\n인터페이스를 분리하며 명확해지고 대체 가능성이 높아짐 의존관계 역전 원칙 (Dependency Inversion Principle, DIP)\n프로그래머는 추상화에 의존해야지 구체화에 의존해선 안 된다\n클라이언트 코드가 구현 클래스를 알고 있으면 이 원칙을 준수하지 않은 것\n아래 사진은 클라이언트 코드가 추상화에도 의존하고 있고 구체화에도 의존하고 있다<br>\n<img alt=\"제목 없는 다이어그램.drawio.png\" src=\"archive/media/제목-없는-다이어그램.drawio.png\" target=\"_self\" style=\"width: 600px; max-width: 100%;\"> ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["area/스프링/조립,-설정자란-무엇인가.html"],"author":"","coverImageURL":".","fullURL":"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","pathToRoot":"../..","attachments":["archive/media/제목-없는-다이어그램.drawio.png"],"createdTime":1751683748954,"modifiedTime":1751705852475,"sourceSize":2366,"sourcePath":"Area/스프링/SOLID 좋은 객체 지향 설계를 위한 5 원칙.md","exportPath":"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","showInTree":true,"treeOrder":34,"backlinks":["area/스프링/객체-지향-프로그래밍이란.html","area/스프링/왜-스프링인가.html"],"type":"markdown"},"area/알고리즘-공부/소수(채-방식).html":{"title":"소수(채 방식)","icon":"","description":"1 prime_list = [False, False] + [True] * (maxnum - 1)2 for i in range(2, int(maxnum ** 0.5) + 1):3 if prime_list[i]:4 prime_list[i * 2::i] = [False] * len(prime_list[i * 2::i])1# prime_list=set(range(2,maxnum+1))2# for i in range(2, maxnum+1):3# if i in range(2, maxnum+1):4# prime_list -= set(range(2*i, maxnum+1, i))","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/알고리즘-공부/소수(채-방식).html","pathToRoot":"../..","attachments":[],"createdTime":1747066243200,"modifiedTime":1744270217652,"sourceSize":392,"sourcePath":"Area/알고리즘 공부/소수(채 방식).md","exportPath":"area/알고리즘-공부/소수(채-방식).html","showInTree":true,"treeOrder":36,"backlinks":[],"type":"markdown"},"area/알고리즘-공부/순열생성기.html":{"title":"순열생성기","icon":"","description":"1 def gen_permutations(arr, n):2 result = []34 if n == 0:5 return [[]]67 for i, elem in enumerate(arr): 8 for P in gen_permutations(arr[:i] + arr[i+1:], n-1):9 result += [[elem]+P]10 return result","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/알고리즘-공부/순열생성기.html","pathToRoot":"../..","attachments":[],"createdTime":1747066243208,"modifiedTime":1744270222822,"sourceSize":276,"sourcePath":"Area/알고리즘 공부/순열생성기.md","exportPath":"area/알고리즘-공부/순열생성기.html","showInTree":true,"treeOrder":37,"backlinks":[],"type":"markdown"},"area/알고리즘-공부/알고리즘.html":{"title":"알고리즘","icon":"","description":"<a data-href=\"알고리즘 공부\" href=\"area/알고리즘-공부/알고리즘-공부.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">알고리즘 공부</a>알고리즘은 주어진 문제를 해결하기 위한 절차난 단계의 집합임\n문제 해결을 위한 논리적인 단계를 제공하고, 최적의 결과를 도출하기 위한 방법론\n정렬, 탐색, 그래프 알고리즘, 동적 계획법, 분할 정복, 탐욕, 백트래킹 등의 구조가 있음정렬은 배열의 요소를 값의 크기순으로 나열시키는 알고리즘이다.삽입 정렬 : 배열의 모든 요소를 앞에서부터 이미 정렬된 배열의 부분과 비교해 자신의 위치에 삽입해 정렬하는 알고리즘\n선택 정렬 : 배열의 모든 요소를 검사해 가장 작은 값을 위치한 값과 교채하는 것을 반복해 정렬하는 알고리즘\n버블 정렬 : 서로 인접한 두 원소를 비교하고 서로 교체하는 것을 반복해 정렬하는 알고리즘\n셸 정렬 : 멀리 떨어진 요소(처음 시작할 때 간격은 배열의 1/2)들끼리 비교하며 정렬을 진행한 뒤 점차 간격을 줄여나가서 정렬하는 알고리즘\n퀵 정렬 : (분할과 정복) 하나의 리스트를 피벗을 기준으로 분할하고 분할한 부분을 정렬하고 정렬한 리스트를 합해 정렬하는 알고리즘\n힙 정렬 : 최대 힙 트리나 최소 힙 트리를 구성해 정렬하는 알고리즘\n병합 정렬 : 하나의 리스트를 분할한 다음 정렬 2개의 정렬된 리스트를 합해 전체가 정렬된 리스트가 되게 하는 알고리즘<br>\n<img alt=\"Pasted image 20241027171659.png\" src=\"archive/media/pasted-image-20241027171659.png\" target=\"_self\" style=\"width: 475px; max-width: 100%;\"><br><img alt=\"Pasted image 20241028170514.png\" src=\"archive/media/pasted-image-20241028170514.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\"><img alt=\"Pasted image 20241028170526.png\" src=\"archive/media/pasted-image-20241028170526.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\"><img alt=\"Pasted image 20241028170540.png\" src=\"archive/media/pasted-image-20241028170540.png\" target=\"_self\" style=\"width: 400px; max-width: 100%;\">\nㅇㅁㄴㅇ","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"정렬","level":2,"id":"정렬_0"},{"heading":"정렬 알고리즘의 종류와 시간복잡도","level":5,"id":"정렬_알고리즘의_종류와_시간복잡도_0"},{"heading":"가장 효율적인 정렬과 그것의 시간 복잡도","level":5,"id":"가장_효율적인_정렬과_그것의_시간_복잡도_0"}],"links":["area/알고리즘-공부/알고리즘-공부.html"],"author":"","coverImageURL":".","fullURL":"area/알고리즘-공부/알고리즘.html","pathToRoot":"../..","attachments":["archive/media/pasted-image-20241027171659.png","archive/media/pasted-image-20241028170514.png","archive/media/pasted-image-20241028170526.png","archive/media/pasted-image-20241028170540.png"],"createdTime":1747066243208,"modifiedTime":1749803657161,"sourceSize":1788,"sourcePath":"Area/알고리즘 공부/알고리즘.md","exportPath":"area/알고리즘-공부/알고리즘.html","showInTree":true,"treeOrder":38,"backlinks":[],"type":"markdown"},"area/알고리즘-공부/알고리즘-공부.html":{"title":"알고리즘 공부","icon":"","description":"<a data-href=\"공부\" href=\".html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">공부</a><a data-href=\"알고리즘 공부\" href=\"area/알고리즘-공부/알고리즘-공부.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">알고리즘 공부</a>","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[".html","area/알고리즘-공부/알고리즘-공부.html"],"author":"","coverImageURL":"","fullURL":"area/알고리즘-공부/알고리즘-공부.html","pathToRoot":"../..","attachments":[],"createdTime":1747066243000,"modifiedTime":1749803657000,"sourceSize":33,"sourcePath":"Area/알고리즘 공부/알고리즘 공부.md","exportPath":"area/알고리즘-공부/알고리즘-공부.html","showInTree":true,"treeOrder":39,"backlinks":["area/알고리즘-공부/알고리즘-공부.html","area/알고리즘-공부/알고리즘.html","area/알고리즘-공부/자료구조.html"],"type":"markdown"},"area/알고리즘-공부/자료구조.html":{"title":"자료구조","icon":"","description":"<a data-href=\"알고리즘 공부\" href=\"area/알고리즘-공부/알고리즘-공부.html\" class=\"internal-link\" target=\"_self\" rel=\"noopener nofollow\">알고리즘 공부</a>]\n자료구조는 데이터를 저장하고 관리하는 방법과 구조를 의미\n데이터를 효율적으로 접근하고 수정하기 위한 구조\n배열, 리스트, 스택, 큐, 트리, 그래프, 해시 테이블 등의 구조가 있음! 파이썬의 리스트는 배열이 아니다배열을 같은 데이터 타입의 값을 연속된 메모리 공간에 저장하는 자료구조\n연속된 메모리 상에 요소가 저장되기 때문에 접근이 빠름\n삽입과 삭제가 효율적이지 않고 배열의 크기를 변경할 수 없음","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":["area/알고리즘-공부/알고리즘-공부.html"],"author":"","coverImageURL":"","fullURL":"area/알고리즘-공부/자료구조.html","pathToRoot":"../..","attachments":[],"createdTime":1747066243208,"modifiedTime":1749803657186,"sourceSize":579,"sourcePath":"Area/알고리즘 공부/자료구조.md","exportPath":"area/알고리즘-공부/자료구조.html","showInTree":true,"treeOrder":40,"backlinks":[],"type":"markdown"},"area/알고리즘-공부/코딩-사이트별-난이도.html":{"title":"코딩 사이트별 난이도","icon":"","description":"<img alt=\"Pasted image 20250319173718.png\" src=\"archive/media/pasted-image-20250319173718.png\" target=\"_self\">","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":".","fullURL":"area/알고리즘-공부/코딩-사이트별-난이도.html","pathToRoot":"../..","attachments":["archive/media/pasted-image-20250319173718.png"],"createdTime":1747066243210,"modifiedTime":1742373439099,"sourceSize":36,"sourcePath":"Area/알고리즘 공부/코딩 사이트별 난이도.md","exportPath":"area/알고리즘-공부/코딩-사이트별-난이도.html","showInTree":true,"treeOrder":41,"backlinks":[],"type":"markdown"},"area/알고리즘-공부/파이썬-커스텀-정렬.html":{"title":"파이썬 커스텀 정렬","icon":"","description":"#2. 정렬에 사용할 키를 반환하는 함수를 정의하여 정렬하는 방법 1def getKey(e):2\treturn e[1] 3\t4students.sort(key=getKey) 5# key parameter에 키를 반환하는 함수명을 argument로 대입한다. 6sorted_students = sorted(students, key=getKey)1sys.setrecursionlimit(10**6) 2# 파이썬 재귀 풀떄 써야함 안쓰면 제약 걸림(1000개)1import sys23sys.setrecursionlimit(10**6)4input = sys.stdin.readline56n, m = map(int, input().split())78# 정방향 역방향 길 생성9graph = [[] for _ in range(n+1)]10graph_r = [[] for _ in range(n+1)]11for _ in range(m):12 s, t = map(int, input().split())13 graph[s].append(t)14 graph_r[t].append(s)1516S, T = map(int, input().split())1718def dfs(node, graph, visited):19 if visited[node]:20 return21 visited[node] = True22 for nxt in graph[node]:23 dfs(nxt, graph, visited)2425# 출근길: S에서 T로 가는 경로 (T에 도달하면 더 이상 진행하지 않음)26visited1 = [False] * (n+1)27visited1[T] = True # T 도착 시 더 이상 진행하지 않도록 미리 표시28dfs(S, graph, visited1)2930# 출근길: 역방향 그래프 T에서 S로 가는 경로 (S에서 멈춤)31visited1_r = [False] * (n+1)32dfs(T, graph_r, visited1_r)3334# 퇴근길: T에서 S로 가는 경로 (S에 도달하면 더 이상 진행하지 않음)35visited2 = [False] * (n+1)36visited2[S] = True # S 도착 시 더 이상 진행하지 않도록 미리 표시37dfs(T, graph, visited2)3839# 퇴근길: 역방향 그래프 S에서 T로 가는 경로 (T에서 멈춤)40visited2_r = [False] * (n+1)41dfs(S, graph_r, visited2_r)4243answer = 044for i in range(1, n+1):45 if i == S or i == T:46 continue47 if visited1[i] and visited1_r[i] and visited2[i] and visited2_r[i]:48 answer += 14950print(answer)51dfs1import sys2sys.setrecursionlimit(10000)3input = sys.stdin.readline45n = int(input().strip())67# 지도 정보 읽기: 'stat'는 n x n 2차원 리스트로 구성8stat = []9for _ in range(n):10 # 한 줄의 문자열을 정수 리스트로 변환하여 저장11 stat.append(list(map(int, list(input().strip()))))1213# 방문 여부를 저장할 2차원 리스트14visited = [[False] * n for _ in range(n)]1516print(visited)1718# 네 방향 (상, 하, 좌, 우)19dx = [-1, 1, 0, 0]20dy = [0, 0, -1, 1]2122def dfs(x, y):23 \"\"\"(x, y) 좌표에서 시작하여 연결된 장애물의 개수를 DFS로 반환한다.\"\"\"24 visited[x][y] = True25 count = 1 # 현재 장애물 포함26 for d in range(4):27 nx = x + dx[d]28 ny = y + dy[d]29 if 0 &lt;= nx &lt; n and 0 &lt;= ny &lt; n:30 if stat[nx][ny] == 1 and not visited[nx][ny]:31 count += dfs(nx, ny)32 return count3334result = [] # 각 블록(단지)에 속하는 장애물의 개수를 저장할 리스트3536# 전체 지도를 순회하며 아직 방문하지 않은 장애물(1)을 발견하면 DFS 실행37for i in range(n):38 for j in range(n):39 if stat[i][j] == 1 and not visited[i][j]:40 result.append(dfs(i, j))4142# 결과를 오름차순 정렬 후 출력43result.sort()44print(len(result))45for count in result:46 print(count)47BFS1import sys2from collections import deque3sys.setrecursionlimit(10000)4input = sys.stdin.readline56n = int(input().strip())78# 지도 정보 읽기: 'stat'는 n x n 2차원 리스트로 구성9stat = []10for _ in range(n):11 # 한 줄의 문자열을 정수 리스트로 변환하여 저장12 stat.append(list(map(int, list(input().strip()))))1314# 방문 여부를 저장할 2차원 리스트15visited = [[False] * n for _ in range(n)]1617# print(visited) # 초기 방문 리스트 출력 (디버깅용)1819# 네 방향 (상, 하, 좌, 우)20dx = [-1, 1, 0, 0]21dy = [0, 0, -1, 1]2223def bfs(x, y):24 \"\"\"(x, y) 좌표에서 시작하여 연결된 장애물의 개수를 BFS로 반환한다.\"\"\"25 queue = deque()26 queue.append((x, y))27 visited[x][y] = True28 count = 1 # 현재 장애물 포함29 while queue:30 cx, cy = queue.popleft()31 for d in range(4):32 nx = cx + dx[d]33 ny = cy + dy[d]34 if 0 &lt;= nx &lt; n and 0 &lt;= ny &lt; n:35 if stat[nx][ny] == 1 and not visited[nx][ny]:36 visited[nx][ny] = True37 queue.append((nx, ny))38 count += 139 return count4041result = [] # 각 블록(단지)에 속하는 장애물의 개수를 저장할 리스트4243# 전체 지도를 순회하며 아직 방문하지 않은 장애물(1)을 발견하면 BFS 실행44for i in range(n):45 for j in range(n):46 if stat[i][j] == 1 and not visited[i][j]:47 result.append(bfs(i, j))4849# 결과를 오름차순 정렬 후 출력50result.sort()51print(len(result))52for count in result:53 print(count)54","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"그래프에서 동시 경유","level":4,"id":"그래프에서_동시_경유_0"}],"links":[],"author":"","coverImageURL":"","fullURL":"area/알고리즘-공부/파이썬-커스텀-정렬.html","pathToRoot":"../..","attachments":[],"createdTime":1747066243210,"modifiedTime":1744270240635,"sourceSize":4834,"sourcePath":"Area/알고리즘 공부/파이썬 커스텀 정렬.md","exportPath":"area/알고리즘-공부/파이썬-커스텀-정렬.html","showInTree":true,"treeOrder":42,"backlinks":[],"type":"markdown"},"area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html":{"title":"lasy heap 중간 요소 삭제 가능","icon":"","description":"1class LazyHeap:2 def __init__(self):3 self.heap = [] # 실제 힙으로 사용할 리스트4 self.deleted = {} # 삭제되어야 할 요소를 마킹할 딕셔너리56 def push(self, item):7 \"\"\"힙에 요소 삽입\"\"\"8 heapq.heappush(self.heap, item)910 def lazy_delete(self, item):11 \"\"\"요소를 바로 삭제하지 않고, 삭제 마킹\"\"\"12 # if item not in self.deleted:13 # self.deleted[item] = 014 # self.deleted[item] = self.deleted[item] + 115 self.deleted[item] = self.deleted.get(item, 0) + 11617 def pop(self):18 \"\"\"19 힙의 최솟값을 반환.20 만약 최솟값이 삭제되어야 할 요소라면, 삭제 마킹을 감소시키고21 실제로 유효한 값을 찾을 때까지 pop을 반복.22 \"\"\"23 while self.heap:24 item = heapq.heappop(self.heap)25 if self.deleted.get(item, 0) &gt; 0:26 # 삭제되어야 하는 요소이면, 삭제 마킹 감소27 self.deleted[item] -= 128 if self.deleted[item] == 0:29 del self.deleted[item]30 continue # 삭제된 요소는 반환하지 않고 건너뛰기31 return item32 raise IndexError(\"pop from empty heap\")","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[],"links":[],"author":"","coverImageURL":"","fullURL":"area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html","pathToRoot":"../..","attachments":[],"createdTime":1747066243200,"modifiedTime":1744270201077,"sourceSize":1313,"sourcePath":"Area/알고리즘 공부/lasy heap 중간 요소 삭제 가능.md","exportPath":"area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html","showInTree":true,"treeOrder":43,"backlinks":[],"type":"markdown"},"area/포트폴리오.html":{"title":"포트폴리오","icon":"","description":"\n이름: 김영현\n생년월일: 2000년 05월 05일\n이메일: <a data-tooltip-position=\"top\" aria-label=\"mailto:kimyh9181@naver.com\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"mailto:kimyh9181@naver.com\" target=\"_self\">kimyh9181@naver.com</a>\n<br>GitHub: <a rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/SuperNoobChallenge\" target=\"_self\">https://github.com/SuperNoobChallenge</a>\n2년간 포기하지 않고 학과 연구생 활동을 지속한 경험을 바탕으로, 회사에서도 책임감 있게 업무에 임하며 꾸준히 성장하겠습니다.\nProgramming Languages: Python: NumPy, OpenCV 등 라이브러리 활용 능력\nPCCP Python 3 Lv.3 자격 보유 Java, C++: 객체 지향 프로그래밍 기본 이해\n대학 수준의 프로젝트 구현 능력 Database: SQL: 기본적인 CRUD 쿼리 및 Join 문 작성 가능\nJPA, JPQL: fetch join을 사용한 간단한 쿼리 최적화 가능 Cloud: Firebase (Firestore, Authentication) 활용 경험 Hardware &amp; IoT: ESP32 기반 시스템 구축 및 센서 데이터 처리 경험 Tools &amp; Collaboration: GitHub\nSpring: Spring Boot를 활용해 간단한 웹 애플리케이션 구현 경험 1. 자세 추정 모델 기반 성인-아동 분류 (2023.06 ~ 2024.06)\n설명: CCTV 등에서 신체 일부만 촬영되어도 성인과 아동을 효과적으로 분류하기 위해, 자세 추정(Pose Estimation) 모델로 추출한 신체 특징 데이터를 다층 퍼셉트론(MLP) 모델로 학습시켜 분류하는 시스템 개발. 기존 신체 비율 기반 분류 방식의 한계점 개선 시도.\n나의 역할 및 기여: 데이터 수집 및 다양한 가림 시나리오를 적용한 데이터 증강 수행.\n자세 추정 모델을 활용하여 17개 주요 관절/얼굴 좌표 및 Bounding Box 추출.\nBounding Box 기반 Min-Max Scaling으로 특징 정규화 및 관절 간 거리 계산을 통해 47차원 특징 벡터 생성.\nMLP 모델 설계 (3개 은닉층, ReLU, Dropout) 및 하이퍼파라미터 튜닝을 통한 모델 학습 주도. 사용 기술: Python, Pose Estimation (YOLOv8-pose), NumPy, MLP (PyTorch).\n결과/성과: 개발된 모델의 테스트 데이터셋 기준 분류 정확도 85% 달성.\n<br>Link: <a data-tooltip-position=\"top\" aria-label=\"https://shrub-ninja-35e.notion.site/1f0ea2da112281b6bfe2f9b663af6a24\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://shrub-ninja-35e.notion.site/1f0ea2da112281b6bfe2f9b663af6a24\" target=\"_self\">Notion</a>\n2. 인터넷 연결 스마트화분 (2024.07 ~ 2024.12)\n설명: 기존 블루투스 기반 스마트 화분의 원격 모니터링 한계를 극복하고자, ESP32 마이크로컨트롤러와 Wi-Fi를 이용해 센서(온습도, 토양 습도, 배터리 전압) 데이터를 Firebase Firestore로 전송하고, 사용자가 모바일 앱을 통해 원격으로 식물 상태를 확인할 수 있는 IoT 시스템.\n나의 역할 및 기여: 하드웨어(HW): ESP32 기반 시스템 설계 및 구축 (센서 연동, 데이터 전처리), Deep Sleep 모드를 활용한 전력 관리, Wi-Fi/Bluetooth 통신 구현 (데이터 전송, 앱 통한 Wi-Fi 설정).\n데이터베이스(DB): 확장성을 고려한 NoSQL (Firestore) 스키마 설계 (사용자-화분-데이터 관계).\n애플리케이션: Firestore 데이터 연동, ESP32 Wi-Fi 설정을 위한 Bluetooth 통신 기능 개발. 사용 기술: ESP32 (C++), Firebase (Firestore, Authentication), Android Studio (Kotlin), Sensors (DHT22, Soil Moisture, etc.).\n결과/성과: 원격 식물 상태 모니터링 및 관리 시스템 프로토타입 완성 및 동작 시연. 초기 설계(라즈베리파이) 실패 경험을 통해 문제 분석 및 해결 능력 향상, 기술 선택(ESP32, Firebase)의 중요성 학습.\n<br>Link: <a data-tooltip-position=\"top\" aria-label=\"https://github.com/SuperNoobChallenge/smartpot_HW\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/SuperNoobChallenge/smartpot_HW\" target=\"_self\">GitHub Repository(HW)</a>, <a data-tooltip-position=\"top\" aria-label=\"https://github.com/SuperNoobChallenge/smartpot\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/SuperNoobChallenge/smartpot\" target=\"_self\">GitHub Repository(APP)</a>, <a data-tooltip-position=\"top\" aria-label=\"https://youtu.be/H9EMrdDH0d8\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://youtu.be/H9EMrdDH0d8\" target=\"_self\">YouTube Demo</a>, <a data-tooltip-position=\"top\" aria-label=\"https://shrub-ninja-35e.notion.site/1f0ea2da112281c995bfeab32f8e1854\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://shrub-ninja-35e.notion.site/1f0ea2da112281c995bfeab32f8e1854\" target=\"_self\">Notion</a>\n3. 랜덤 맵 타워 디펜스 게임 (2023.05 ~ 2023.06)\n설명: 게임의 반복 플레이 가치를 높이기 위해 매 판마다 지도와 적의 생성 위치가 무작위로 변경되는 타워 디펜스 게임.\n나의 역할 및 기여: 깊이 우선 탐색(DFS) 알고리즘을 변형하여 랜덤하게 노드를 방문하는 방식으로 맵 생성 로직 구현.\n다익스트라(Dijkstra) 알고리즘을 활용하여 생성된 맵에서 적의 최적 이동 경로를 계산하는 로직 구현. 사용 기술: Android Studio(Java), DFS Algorithm, Dijkstra's Algorithm\n<br>Link: <a data-tooltip-position=\"top\" aria-label=\"https://github.com/SuperNoobChallenge/Random_Map_Tower_Defense\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://github.com/SuperNoobChallenge/Random_Map_Tower_Defense\" target=\"_self\">GitHub Repository</a>, <a data-tooltip-position=\"top\" aria-label=\"https://www.youtube.com/watch?v=5YuW43d8cos&amp;t=280s\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://www.youtube.com/watch?v=5YuW43d8cos&amp;t=280s\" target=\"_self\">YouTube Demo</a>, <a data-tooltip-position=\"top\" aria-label=\"https://shrub-ninja-35e.notion.site/1f0ea2da1122819c9272e6873ba276ae\" rel=\"noopener nofollow\" class=\"external-link is-unresolved\" href=\"https://shrub-ninja-35e.notion.site/1f0ea2da1122819c9272e6873ba276ae\" target=\"_self\">Notion</a> 컴퓨터공학과 학부 연구생 (목원대학교) 기간: 2022.04 ~ 2024.06 (약 2년 2개월)\n주요 활동: 인공지능 모델 학습 및 데이터 분석\n연구 보고서 작성 대전-세종-충남(DSC) CNU SW아카데미 기간: 2024.07 ~ 2024.12 (약 5개월)\n과정: 웹프론트엔드 과정\n주요 활동: 총 680시간 교육 과정 이수 목원대학교 컴퓨터공학과 (학사) 졸업: 2025년 02월\n학점: 4.35 / 4.5 정보처리기사: 2024.06.18 취득\nPCCP Python3 Lv.3: 2024.11.23 취득 우수상 - 2024학년도 전기 학위수여식 (수여자: 목원대학교 총장, 2025.02.20)\n장려상 - 2024 캡스톤디자인 창업 Boot-Up 메이커톤 (수여자: 목원대학교 총장, 2024.12.06)\n","aliases":[],"inlineTags":[],"frontmatterTags":[],"headers":[{"heading":"<strong>김영현 | 신입 개발자 포트폴리오</strong>","level":1,"id":"**김영현_|_신입_개발자_포트폴리오**_0"},{"heading":"<strong>👤 기본 정보</strong>","level":2,"id":"**👤_기본_정보**_0"},{"heading":"<strong>👋 안녕하세요! 백엔드 개발자 김영현입니다.</strong>","level":2,"id":"**👋_안녕하세요!_백엔드_개발자_김영현입니다.**_0"},{"heading":"<strong>🛠️ 보유 기술</strong>","level":2,"id":"**🛠️_보유_기술**_0"},{"heading":"<strong>🚀 프로젝트</strong>","level":2,"id":"**🚀_프로젝트**_0"},{"heading":"<strong>🎒 활동 및 경험</strong>","level":2,"id":"**🎒_활동_및_경험**_0"},{"heading":"<strong>📖 학력</strong>","level":2,"id":"**📖_학력**_0"},{"heading":"<strong>🏅 자격증</strong>","level":2,"id":"**🏅_자격증**_0"},{"heading":"<strong>🏆 수상 내역</strong>","level":2,"id":"**🏆_수상_내역**_0"}],"links":["mailto:kimyh9181@naver.com"],"author":"","coverImageURL":"","fullURL":"area/포트폴리오.html","pathToRoot":"..","attachments":[],"createdTime":1758523362664,"modifiedTime":1758523365788,"sourceSize":6060,"sourcePath":"Area/포트폴리오.md","exportPath":"area/포트폴리오.html","showInTree":true,"treeOrder":44,"backlinks":[],"type":"markdown"}},"fileInfo":{"area/스프링/검증/검증-구현(일반)/v1.html":{"createdTime":1758082437147,"modifiedTime":1758090866191,"sourceSize":1183,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V1.md","exportPath":"area/스프링/검증/검증-구현(일반)/v1.html","showInTree":true,"treeOrder":4,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(일반)/v2.html":{"createdTime":1758086483064,"modifiedTime":1758271220190,"sourceSize":1827,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V2.md","exportPath":"area/스프링/검증/검증-구현(일반)/v2.html","showInTree":true,"treeOrder":5,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(일반)/v3.html":{"createdTime":1758088804577,"modifiedTime":1758093042685,"sourceSize":1230,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V3.md","exportPath":"area/스프링/검증/검증-구현(일반)/v3.html","showInTree":true,"treeOrder":6,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(일반)/v4.html":{"createdTime":1758089326829,"modifiedTime":1758092848127,"sourceSize":1442,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V4.md","exportPath":"area/스프링/검증/검증-구현(일반)/v4.html","showInTree":true,"treeOrder":7,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(일반)/v5.html":{"createdTime":1758092853807,"modifiedTime":1758093615151,"sourceSize":1640,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V5.md","exportPath":"area/스프링/검증/검증-구현(일반)/v5.html","showInTree":true,"treeOrder":8,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(일반)/v6.html":{"createdTime":1758093675578,"modifiedTime":1758093850064,"sourceSize":618,"sourcePath":"Area/스프링/검증/검증 구현(일반)/V6.md","exportPath":"area/스프링/검증/검증-구현(일반)/v6.html","showInTree":true,"treeOrder":9,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html":{"createdTime":1758266298232,"modifiedTime":1758266784659,"sourceSize":651,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/바인딩에 실패한 경우(타입 오류).md","exportPath":"area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html","showInTree":true,"treeOrder":11,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html":{"createdTime":1758266146687,"modifiedTime":1758332058512,"sourceSize":1026,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/애노테이션 기반 검증.md","exportPath":"area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html","showInTree":true,"treeOrder":12,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html":{"createdTime":1758267536217,"modifiedTime":1758268301430,"sourceSize":996,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/오브젝트 오류(글로벌).md","exportPath":"area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html","showInTree":true,"treeOrder":13,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html":{"createdTime":1758266809805,"modifiedTime":1758267489798,"sourceSize":611,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/Bean Validation의 에러 코드(메시지).md","exportPath":"area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html","showInTree":true,"treeOrder":14,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/v1.html":{"createdTime":1758185886376,"modifiedTime":1758270451788,"sourceSize":507,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V1.md","exportPath":"area/스프링/검증/검증-구현(bean)/v1.html","showInTree":true,"treeOrder":15,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/v2.html":{"createdTime":1758185886376,"modifiedTime":1758271321575,"sourceSize":1345,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V2.md","exportPath":"area/스프링/검증/검증-구현(bean)/v2.html","showInTree":true,"treeOrder":16,"backlinks":["area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html"],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/v3.html":{"createdTime":1758271257527,"modifiedTime":1758272569527,"sourceSize":1963,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V3.md","exportPath":"area/스프링/검증/검증-구현(bean)/v3.html","showInTree":true,"treeOrder":17,"backlinks":["area/스프링/검증/검증-구현(bean)/v2.html"],"type":"markdown","data":null},"area/스프링/검증/검증-구현(bean)/v4(api).html":{"createdTime":1758272615299,"modifiedTime":1758273464518,"sourceSize":1204,"sourcePath":"Area/스프링/검증/검증 구현(Bean)/V4(API).md","exportPath":"area/스프링/검증/검증-구현(bean)/v4(api).html","showInTree":true,"treeOrder":18,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/검증이란.html":{"createdTime":1758012383991,"modifiedTime":1758100487333,"sourceSize":953,"sourcePath":"Area/스프링/검증/검증이란.md","exportPath":"area/스프링/검증/검증이란.html","showInTree":true,"treeOrder":19,"backlinks":[],"type":"markdown","data":null},"area/스프링/검증/메시지-키값-생성,-선택-방식.html":{"createdTime":1758093930812,"modifiedTime":1758100391761,"sourceSize":2324,"sourcePath":"Area/스프링/검증/메시지 키값 생성, 선택 방식.md","exportPath":"area/스프링/검증/메시지-키값-생성,-선택-방식.html","showInTree":true,"treeOrder":20,"backlinks":[],"type":"markdown","data":null},"area/스프링/세션/무제.html":{"createdTime":1758354350952,"modifiedTime":1758354353323,"sourceSize":195,"sourcePath":"Area/스프링/세션/무제.md","exportPath":"area/스프링/세션/무제.html","showInTree":true,"treeOrder":22,"backlinks":[],"type":"markdown","data":null},"area/스프링/세션/세션의-생명-주기.html":{"createdTime":1758519739847,"modifiedTime":1758523149272,"sourceSize":657,"sourcePath":"Area/스프링/세션/세션의 생명 주기.md","exportPath":"area/스프링/세션/세션의-생명-주기.html","showInTree":true,"treeOrder":23,"backlinks":[],"type":"markdown","data":null},"area/스프링/세션/세션이란.html":{"createdTime":1758519498124,"modifiedTime":1758519500473,"sourceSize":810,"sourcePath":"Area/스프링/세션/세션이란.md","exportPath":"area/스프링/세션/세션이란.html","showInTree":true,"treeOrder":24,"backlinks":[],"type":"markdown","data":null},"area/스프링/객체-지향-프로그래밍이란.html":{"createdTime":1751623843107,"modifiedTime":1758332788575,"sourceSize":1395,"sourcePath":"Area/스프링/객체 지향 프로그래밍이란.md","exportPath":"area/스프링/객체-지향-프로그래밍이란.html","showInTree":true,"treeOrder":25,"backlinks":["area/스프링/왜-스프링인가.html"],"type":"markdown","data":null},"area/스프링/낙서장임.html":{"createdTime":1749803965948,"modifiedTime":1751869676153,"sourceSize":518,"sourcePath":"Area/스프링/낙서장임.md","exportPath":"area/스프링/낙서장임.html","showInTree":true,"treeOrder":26,"backlinks":[],"type":"markdown","data":null},"area/스프링/왜-스프링인가.html":{"createdTime":1749803965948,"modifiedTime":1758332831513,"sourceSize":546,"sourcePath":"Area/스프링/왜 스프링인가.md","exportPath":"area/스프링/왜-스프링인가.html","showInTree":true,"treeOrder":27,"backlinks":[],"type":"markdown","data":null},"area/스프링/조립,-설정자란-무엇인가.html":{"createdTime":1751698404742,"modifiedTime":1751698433625,"sourceSize":55,"sourcePath":"Area/스프링/조립, 설정자란 무엇인가.md","exportPath":"area/스프링/조립,-설정자란-무엇인가.html","showInTree":true,"treeOrder":28,"backlinks":["area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","area/스프링/객체-지향-프로그래밍이란.html"],"type":"markdown","data":null},"area/스프링/초기-설정-spring-initializer-을-이용한.html":{"createdTime":1751883266712,"modifiedTime":1751883333951,"sourceSize":62,"sourcePath":"Area/스프링/초기 설정 spring initializer 을 이용한.md","exportPath":"area/스프링/초기-설정-spring-initializer-을-이용한.html","showInTree":true,"treeOrder":29,"backlinks":[],"type":"markdown","data":null},"area/스프링/프레임워크-vs-라이브러리.html":{"createdTime":1751867633352,"modifiedTime":1751867711690,"sourceSize":176,"sourcePath":"Area/스프링/프레임워크 vs 라이브러리.md","exportPath":"area/스프링/프레임워크-vs-라이브러리.html","showInTree":true,"treeOrder":30,"backlinks":["area/스프링/왜-스프링인가.html"],"type":"markdown","data":null},"area/스프링/intellij-유용한-단축키(windows-기준).html":{"createdTime":1751881151382,"modifiedTime":1751881234533,"sourceSize":54,"sourcePath":"Area/스프링/IntelliJ 유용한 단축키(windows 기준).md","exportPath":"area/스프링/intellij-유용한-단축키(windows-기준).html","showInTree":true,"treeOrder":31,"backlinks":[],"type":"markdown","data":null},"area/스프링/jpa-란-무엇인가.html":{"createdTime":1752743845826,"modifiedTime":1752744093814,"sourceSize":254,"sourcePath":"Area/스프링/JPA 란 무엇인가.md","exportPath":"area/스프링/jpa-란-무엇인가.html","showInTree":true,"treeOrder":32,"backlinks":[],"type":"markdown","data":null},"area/스프링/lombok-(롬복).html":{"createdTime":1751882328484,"modifiedTime":1751882959090,"sourceSize":567,"sourcePath":"Area/스프링/lombok (롬복).md","exportPath":"area/스프링/lombok-(롬복).html","showInTree":true,"treeOrder":33,"backlinks":[],"type":"markdown","data":null},"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html":{"createdTime":1751683748954,"modifiedTime":1751705852475,"sourceSize":2366,"sourcePath":"Area/스프링/SOLID 좋은 객체 지향 설계를 위한 5 원칙.md","exportPath":"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","showInTree":true,"treeOrder":34,"backlinks":["area/스프링/객체-지향-프로그래밍이란.html","area/스프링/왜-스프링인가.html"],"type":"markdown","data":null},"area/알고리즘-공부/소수(채-방식).html":{"createdTime":1747066243200,"modifiedTime":1744270217652,"sourceSize":392,"sourcePath":"Area/알고리즘 공부/소수(채 방식).md","exportPath":"area/알고리즘-공부/소수(채-방식).html","showInTree":true,"treeOrder":36,"backlinks":[],"type":"markdown","data":null},"area/알고리즘-공부/순열생성기.html":{"createdTime":1747066243208,"modifiedTime":1744270222822,"sourceSize":276,"sourcePath":"Area/알고리즘 공부/순열생성기.md","exportPath":"area/알고리즘-공부/순열생성기.html","showInTree":true,"treeOrder":37,"backlinks":[],"type":"markdown","data":null},"area/알고리즘-공부/알고리즘.html":{"createdTime":1747066243208,"modifiedTime":1749803657161,"sourceSize":1788,"sourcePath":"Area/알고리즘 공부/알고리즘.md","exportPath":"area/알고리즘-공부/알고리즘.html","showInTree":true,"treeOrder":38,"backlinks":[],"type":"markdown","data":null},"area/알고리즘-공부/알고리즘-공부.html":{"createdTime":1747066243000,"modifiedTime":1749803657000,"sourceSize":33,"sourcePath":"Area/알고리즘 공부/알고리즘 공부.md","exportPath":"area/알고리즘-공부/알고리즘-공부.html","showInTree":true,"treeOrder":39,"backlinks":["area/알고리즘-공부/알고리즘-공부.html","area/알고리즘-공부/알고리즘.html","area/알고리즘-공부/자료구조.html"],"type":"markdown","data":null},"area/알고리즘-공부/자료구조.html":{"createdTime":1747066243208,"modifiedTime":1749803657186,"sourceSize":579,"sourcePath":"Area/알고리즘 공부/자료구조.md","exportPath":"area/알고리즘-공부/자료구조.html","showInTree":true,"treeOrder":40,"backlinks":[],"type":"markdown","data":null},"area/알고리즘-공부/코딩-사이트별-난이도.html":{"createdTime":1747066243210,"modifiedTime":1742373439099,"sourceSize":36,"sourcePath":"Area/알고리즘 공부/코딩 사이트별 난이도.md","exportPath":"area/알고리즘-공부/코딩-사이트별-난이도.html","showInTree":true,"treeOrder":41,"backlinks":[],"type":"markdown","data":null},"area/알고리즘-공부/파이썬-커스텀-정렬.html":{"createdTime":1747066243210,"modifiedTime":1744270240635,"sourceSize":4834,"sourcePath":"Area/알고리즘 공부/파이썬 커스텀 정렬.md","exportPath":"area/알고리즘-공부/파이썬-커스텀-정렬.html","showInTree":true,"treeOrder":42,"backlinks":[],"type":"markdown","data":null},"area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html":{"createdTime":1747066243200,"modifiedTime":1744270201077,"sourceSize":1313,"sourcePath":"Area/알고리즘 공부/lasy heap 중간 요소 삭제 가능.md","exportPath":"area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html","showInTree":true,"treeOrder":43,"backlinks":[],"type":"markdown","data":null},"area/포트폴리오.html":{"createdTime":1758523362664,"modifiedTime":1758523365788,"sourceSize":6060,"sourcePath":"Area/포트폴리오.md","exportPath":"area/포트폴리오.html","showInTree":true,"treeOrder":44,"backlinks":[],"type":"markdown","data":null},"site-lib/scripts/graph-wasm.wasm":{"createdTime":1758510509471,"modifiedTime":1758507948169.8113,"sourceSize":23655,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.wasm","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null},"site-lib/fonts/94f2f163d4b698242fef.otf":{"createdTime":1758523802791,"modifiedTime":1758523802791,"sourceSize":66800,"sourcePath":"","exportPath":"site-lib/fonts/94f2f163d4b698242fef.otf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/72505e6a122c6acd5471.woff2":{"createdTime":1758523802791,"modifiedTime":1758523802791,"sourceSize":104232,"sourcePath":"","exportPath":"site-lib/fonts/72505e6a122c6acd5471.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/2d5198822ab091ce4305.woff2":{"createdTime":1758523802791,"modifiedTime":1758523802791,"sourceSize":104332,"sourcePath":"","exportPath":"site-lib/fonts/2d5198822ab091ce4305.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/c8ba52b05a9ef10f4758.woff2":{"createdTime":1758523802793,"modifiedTime":1758523802793,"sourceSize":98868,"sourcePath":"","exportPath":"site-lib/fonts/c8ba52b05a9ef10f4758.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cb10ffd7684cd9836a05.woff2":{"createdTime":1758523802792,"modifiedTime":1758523802792,"sourceSize":106876,"sourcePath":"","exportPath":"site-lib/fonts/cb10ffd7684cd9836a05.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/293fd13dbca5a3e450ef.woff2":{"createdTime":1758523802793,"modifiedTime":1758523802793,"sourceSize":105924,"sourcePath":"","exportPath":"site-lib/fonts/293fd13dbca5a3e450ef.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/085cb93e613ba3d40d2b.woff2":{"createdTime":1758523802793,"modifiedTime":1758523802793,"sourceSize":112184,"sourcePath":"","exportPath":"site-lib/fonts/085cb93e613ba3d40d2b.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/b5f0f109bc88052d4000.woff2":{"createdTime":1758523802793,"modifiedTime":1758523802793,"sourceSize":105804,"sourcePath":"","exportPath":"site-lib/fonts/b5f0f109bc88052d4000.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/cbe0ae49c52c920fd563.woff2":{"createdTime":1758523802794,"modifiedTime":1758523802794,"sourceSize":106108,"sourcePath":"","exportPath":"site-lib/fonts/cbe0ae49c52c920fd563.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/535a6cf662596b3bd6a6.woff2":{"createdTime":1758523802794,"modifiedTime":1758523802794,"sourceSize":111708,"sourcePath":"","exportPath":"site-lib/fonts/535a6cf662596b3bd6a6.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/70cc7ff27245e82ad414.ttf":{"createdTime":1758523802795,"modifiedTime":1758523802795,"sourceSize":192740,"sourcePath":"","exportPath":"site-lib/fonts/70cc7ff27245e82ad414.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/454577c22304619db035.ttf":{"createdTime":1758523802795,"modifiedTime":1758523802795,"sourceSize":161376,"sourcePath":"","exportPath":"site-lib/fonts/454577c22304619db035.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/52ac8f3034507f1d9e53.ttf":{"createdTime":1758523802796,"modifiedTime":1758523802796,"sourceSize":191568,"sourcePath":"","exportPath":"site-lib/fonts/52ac8f3034507f1d9e53.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/05b618077343fbbd92b7.ttf":{"createdTime":1758523802796,"modifiedTime":1758523802796,"sourceSize":155288,"sourcePath":"","exportPath":"site-lib/fonts/05b618077343fbbd92b7.ttf","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2":{"createdTime":1758523802790,"modifiedTime":1758523802790,"sourceSize":7876,"sourcePath":"","exportPath":"site-lib/fonts/4bb6ac751d1c5478ff3a.woff2","showInTree":false,"treeOrder":0,"backlinks":[],"type":"font","data":null},"site-lib/media/6155340132a851f6089e.svg":{"createdTime":1758523802790,"modifiedTime":1758523802790,"sourceSize":315,"sourcePath":"","exportPath":"site-lib/media/6155340132a851f6089e.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/media/2308ab1944a6bfa5c5b8.svg":{"createdTime":1758523802790,"modifiedTime":1758523802790,"sourceSize":278,"sourcePath":"","exportPath":"site-lib/media/2308ab1944a6bfa5c5b8.svg","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/html/file-tree-content.html":{"createdTime":1758523803135,"modifiedTime":1758523803135,"sourceSize":17581,"sourcePath":"","exportPath":"site-lib/html/file-tree-content.html","showInTree":false,"treeOrder":0,"backlinks":[],"type":"html","data":null},"site-lib/scripts/webpage.js":{"createdTime":1758510509911,"modifiedTime":1758510509911,"sourceSize":110729,"sourcePath":"","exportPath":"site-lib/scripts/webpage.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-wasm.js":{"createdTime":1758510509911,"modifiedTime":1758510509911,"sourceSize":12885,"sourcePath":"","exportPath":"site-lib/scripts/graph-wasm.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/scripts/graph-render-worker.js":{"createdTime":1758510509911,"modifiedTime":1758510509911,"sourceSize":5681,"sourcePath":"","exportPath":"site-lib/scripts/graph-render-worker.js","showInTree":false,"treeOrder":0,"backlinks":[],"type":"script","data":null},"site-lib/media/favicon.png":{"createdTime":1758523802697,"modifiedTime":1758523802697,"sourceSize":1105,"sourcePath":"","exportPath":"site-lib/media/favicon.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/styles/snippets.css":{"createdTime":1758523802830,"modifiedTime":1758523802830,"sourceSize":262,"sourcePath":"","exportPath":"site-lib/styles/snippets.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/obsidian.css":{"createdTime":1758523802826,"modifiedTime":1758523802826,"sourceSize":198316,"sourcePath":"","exportPath":"site-lib/styles/obsidian.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/other-plugins.css":{"createdTime":1758510628416,"modifiedTime":1758510628416,"sourceSize":25138,"sourcePath":"","exportPath":"site-lib/styles/other-plugins.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/global-variable-styles.css":{"createdTime":1758523802767,"modifiedTime":1758523802767,"sourceSize":305,"sourcePath":"","exportPath":"site-lib/styles/global-variable-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/supported-plugins.css":{"createdTime":1758523802767,"modifiedTime":1758523802767,"sourceSize":21520,"sourcePath":"","exportPath":"site-lib/styles/supported-plugins.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"site-lib/styles/main-styles.css":{"createdTime":1758510509937,"modifiedTime":1758510509937,"sourceSize":19521,"sourcePath":"","exportPath":"site-lib/styles/main-styles.css","showInTree":false,"treeOrder":0,"backlinks":[],"type":"style","data":null},"archive/media/제목-없는-다이어그램.drawio-2.png":{"createdTime":1751626663151,"modifiedTime":1751626663151,"sourceSize":76392,"sourcePath":"Archive/media/제목 없는 다이어그램.drawio 2.png","exportPath":"archive/media/제목-없는-다이어그램.drawio-2.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250917134000.png":{"createdTime":1758084000681,"modifiedTime":1758084000682,"sourceSize":114016,"sourcePath":"Archive/media/Pasted image 20250917134000.png","exportPath":"archive/media/pasted-image-20250917134000.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250707191531.png":{"createdTime":1751883331928,"modifiedTime":1751883331928,"sourceSize":371065,"sourcePath":"Archive/media/Pasted image 20250707191531.png","exportPath":"archive/media/pasted-image-20250707191531.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250707190523.png":{"createdTime":1751882723909,"modifiedTime":1751882723910,"sourceSize":96885,"sourcePath":"Archive/media/Pasted image 20250707190523.png","exportPath":"archive/media/pasted-image-20250707190523.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250707190416.png":{"createdTime":1751882656914,"modifiedTime":1751882656915,"sourceSize":151877,"sourcePath":"Archive/media/Pasted image 20250707190416.png","exportPath":"archive/media/pasted-image-20250707190416.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250707190446.png":{"createdTime":1751882686350,"modifiedTime":1751882686353,"sourceSize":141652,"sourcePath":"Archive/media/Pasted image 20250707190446.png","exportPath":"archive/media/pasted-image-20250707190446.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250707190821.png":{"createdTime":1751882901702,"modifiedTime":1751882901703,"sourceSize":17655,"sourcePath":"Archive/media/Pasted image 20250707190821.png","exportPath":"archive/media/pasted-image-20250707190821.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250707190915.png":{"createdTime":1751882955665,"modifiedTime":1751882955666,"sourceSize":17164,"sourcePath":"Archive/media/Pasted image 20250707190915.png","exportPath":"archive/media/pasted-image-20250707190915.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/제목-없는-다이어그램.drawio.png":{"createdTime":1751698173444,"modifiedTime":1751698173444,"sourceSize":496219,"sourcePath":"Archive/media/제목 없는 다이어그램.drawio.png","exportPath":"archive/media/제목-없는-다이어그램.drawio.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20241027171659.png":{"createdTime":1747066243146,"modifiedTime":1730017019000,"sourceSize":100146,"sourcePath":"Archive/media/Pasted image 20241027171659.png","exportPath":"archive/media/pasted-image-20241027171659.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20241028170514.png":{"createdTime":1747066243146,"modifiedTime":1730102714000,"sourceSize":68097,"sourcePath":"Archive/media/Pasted image 20241028170514.png","exportPath":"archive/media/pasted-image-20241028170514.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20241028170526.png":{"createdTime":1747066243146,"modifiedTime":1730102726000,"sourceSize":56981,"sourcePath":"Archive/media/Pasted image 20241028170526.png","exportPath":"archive/media/pasted-image-20241028170526.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20241028170540.png":{"createdTime":1747066243146,"modifiedTime":1730102740000,"sourceSize":51357,"sourcePath":"Archive/media/Pasted image 20241028170540.png","exportPath":"archive/media/pasted-image-20241028170540.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"archive/media/pasted-image-20250319173718.png":{"createdTime":1747066243160,"modifiedTime":1742373438275,"sourceSize":166450,"sourcePath":"Archive/media/Pasted image 20250319173718.png","exportPath":"archive/media/pasted-image-20250319173718.png","showInTree":false,"treeOrder":0,"backlinks":[],"type":"media","data":null},"site-lib/rss.xml":{"createdTime":1758523815942,"modifiedTime":1758523815942,"sourceSize":40762,"sourcePath":"","exportPath":"site-lib/rss.xml","showInTree":false,"treeOrder":0,"backlinks":[],"type":"other","data":null}},"sourceToTarget":{"Area/스프링/검증/검증 구현(일반)/V1.md":"area/스프링/검증/검증-구현(일반)/v1.html","Area/스프링/검증/검증 구현(일반)/V2.md":"area/스프링/검증/검증-구현(일반)/v2.html","Area/스프링/검증/검증 구현(일반)/V3.md":"area/스프링/검증/검증-구현(일반)/v3.html","Area/스프링/검증/검증 구현(일반)/V4.md":"area/스프링/검증/검증-구현(일반)/v4.html","Area/스프링/검증/검증 구현(일반)/V5.md":"area/스프링/검증/검증-구현(일반)/v5.html","Area/스프링/검증/검증 구현(일반)/V6.md":"area/스프링/검증/검증-구현(일반)/v6.html","Area/스프링/검증/검증 구현(Bean)/바인딩에 실패한 경우(타입 오류).md":"area/스프링/검증/검증-구현(bean)/바인딩에-실패한-경우(타입-오류).html","Area/스프링/검증/검증 구현(Bean)/애노테이션 기반 검증.md":"area/스프링/검증/검증-구현(bean)/애노테이션-기반-검증.html","Area/스프링/검증/검증 구현(Bean)/오브젝트 오류(글로벌).md":"area/스프링/검증/검증-구현(bean)/오브젝트-오류(글로벌).html","Area/스프링/검증/검증 구현(Bean)/Bean Validation의 에러 코드(메시지).md":"area/스프링/검증/검증-구현(bean)/bean-validation의-에러-코드(메시지).html","Area/스프링/검증/검증 구현(Bean)/V1.md":"area/스프링/검증/검증-구현(bean)/v1.html","Area/스프링/검증/검증 구현(Bean)/V2.md":"area/스프링/검증/검증-구현(bean)/v2.html","Area/스프링/검증/검증 구현(Bean)/V3.md":"area/스프링/검증/검증-구현(bean)/v3.html","Area/스프링/검증/검증 구현(Bean)/V4(API).md":"area/스프링/검증/검증-구현(bean)/v4(api).html","Area/스프링/검증/검증이란.md":"area/스프링/검증/검증이란.html","Area/스프링/검증/메시지 키값 생성, 선택 방식.md":"area/스프링/검증/메시지-키값-생성,-선택-방식.html","Area/스프링/세션/무제.md":"area/스프링/세션/무제.html","Area/스프링/세션/세션의 생명 주기.md":"area/스프링/세션/세션의-생명-주기.html","Area/스프링/세션/세션이란.md":"area/스프링/세션/세션이란.html","Area/스프링/객체 지향 프로그래밍이란.md":"area/스프링/객체-지향-프로그래밍이란.html","Area/스프링/낙서장임.md":"area/스프링/낙서장임.html","Area/스프링/왜 스프링인가.md":"area/스프링/왜-스프링인가.html","Area/스프링/조립, 설정자란 무엇인가.md":"area/스프링/조립,-설정자란-무엇인가.html","Area/스프링/초기 설정 spring initializer 을 이용한.md":"area/스프링/초기-설정-spring-initializer-을-이용한.html","Area/스프링/프레임워크 vs 라이브러리.md":"area/스프링/프레임워크-vs-라이브러리.html","Area/스프링/IntelliJ 유용한 단축키(windows 기준).md":"area/스프링/intellij-유용한-단축키(windows-기준).html","Area/스프링/JPA 란 무엇인가.md":"area/스프링/jpa-란-무엇인가.html","Area/스프링/lombok (롬복).md":"area/스프링/lombok-(롬복).html","Area/스프링/SOLID 좋은 객체 지향 설계를 위한 5 원칙.md":"area/스프링/solid-좋은-객체-지향-설계를-위한-5-원칙.html","Area/알고리즘 공부/소수(채 방식).md":"area/알고리즘-공부/소수(채-방식).html","Area/알고리즘 공부/순열생성기.md":"area/알고리즘-공부/순열생성기.html","Area/알고리즘 공부/알고리즘.md":"area/알고리즘-공부/알고리즘.html","Area/알고리즘 공부/알고리즘 공부.md":"area/알고리즘-공부/알고리즘-공부.html","Area/알고리즘 공부/자료구조.md":"area/알고리즘-공부/자료구조.html","Area/알고리즘 공부/코딩 사이트별 난이도.md":"area/알고리즘-공부/코딩-사이트별-난이도.html","Area/알고리즘 공부/파이썬 커스텀 정렬.md":"area/알고리즘-공부/파이썬-커스텀-정렬.html","Area/알고리즘 공부/lasy heap 중간 요소 삭제 가능.md":"area/알고리즘-공부/lasy-heap-중간-요소-삭제-가능.html","Area/포트폴리오.md":"area/포트폴리오.html","":"site-lib/rss.xml","Archive/media/제목 없는 다이어그램.drawio 2.png":"archive/media/제목-없는-다이어그램.drawio-2.png","Archive/media/Pasted image 20250917134000.png":"archive/media/pasted-image-20250917134000.png","Archive/media/Pasted image 20250707191531.png":"archive/media/pasted-image-20250707191531.png","Archive/media/Pasted image 20250707190523.png":"archive/media/pasted-image-20250707190523.png","Archive/media/Pasted image 20250707190416.png":"archive/media/pasted-image-20250707190416.png","Archive/media/Pasted image 20250707190446.png":"archive/media/pasted-image-20250707190446.png","Archive/media/Pasted image 20250707190821.png":"archive/media/pasted-image-20250707190821.png","Archive/media/Pasted image 20250707190915.png":"archive/media/pasted-image-20250707190915.png","Archive/media/제목 없는 다이어그램.drawio.png":"archive/media/제목-없는-다이어그램.drawio.png","Archive/media/Pasted image 20241027171659.png":"archive/media/pasted-image-20241027171659.png","Archive/media/Pasted image 20241028170514.png":"archive/media/pasted-image-20241028170514.png","Archive/media/Pasted image 20241028170526.png":"archive/media/pasted-image-20241028170526.png","Archive/media/Pasted image 20241028170540.png":"archive/media/pasted-image-20241028170540.png","Archive/media/Pasted image 20250319173718.png":"archive/media/pasted-image-20250319173718.png"},"featureOptions":{"backlinks":{"featureId":"backlinks","enabled":false,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".footer","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Backlinks","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"tags":{"featureId":"tags","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header .data-bar","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"showInlineTags":true,"showFrontmatterTags":true,"info_showInlineTags":{"show":true,"name":"","description":"Show tags defined inside the document at the top of the page.","placeholder":""},"info_showFrontmatterTags":{"show":true,"name":"","description":"Show tags defined in the frontmatter of the document at the top of the page.","placeholder":""}},"alias":{"featureId":"aliases","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header .data-bar","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Aliases","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"properties":{"featureId":"properties","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":".header","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Properties","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"info_hideProperties":{"show":true,"name":"","description":"A list of properties to hide from the properties view","placeholder":""}},"fileNavigation":{"featureId":"file-navigation","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#left-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"showCustomIcons":false,"showDefaultFolderIcons":false,"showDefaultFileIcons":false,"defaultFolderIcon":"lucide//folder","defaultFileIcon":"lucide//file","defaultMediaIcon":"lucide//file-image","exposeStartingPath":true,"info_showCustomIcons":{"show":true,"name":"","description":"Show custom icons for files and folders","placeholder":""},"info_showDefaultFolderIcons":{"show":true,"name":"","description":"Show a default icon of a folder for every folder in the tree","placeholder":""},"info_showDefaultFileIcons":{"show":true,"name":"","description":"Show a default icon of a file for every file in the tree","placeholder":""},"info_defaultFolderIcon":{"show":true,"name":"","description":"The icon to use for folders. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultFileIcon":{"show":true,"name":"","description":"The icon to use for files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_defaultMediaIcon":{"show":true,"name":"","description":"The icon to use for media files. Prefix with 'lucide//' to use a Lucide icon","placeholder":""},"info_exposeStartingPath":{"show":true,"name":"","description":"Whether or not to show the current file in the file tree when the page is first loaded","placeholder":""},"includePath":"site-lib/html/file-tree.html"},"search":{"featureId":"search","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#left-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Search...","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"outline":{"featureId":"outline","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar-content","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Outline","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"startCollapsed":false,"minCollapseDepth":0,"info_startCollapsed":{"show":true,"name":"","description":"Should the outline start collapsed?","placeholder":""},"info_minCollapseDepth":{"show":true,"name":"","description":"Only allow outline items to be collapsed if they are at least this many levels deep in the tree.","placeholder":"","dropdownOptions":{"1":1,"2":2,"No Collapse":100}}},"themeToggle":{"featureId":"theme-toggle","enabled":false,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar .topbar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""}},"graphView":{"featureId":"graph-view","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"#right-sidebar-content","type":"start","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"displayTitle":"Graph View","info_displayTitle":{"show":true,"name":"","description":"Descriptive title to show above the feature","placeholder":""},"showOrphanNodes":true,"showAttachments":false,"allowGlobalGraph":true,"allowExpand":true,"attractionForce":1,"linkLength":15,"repulsionForce":80,"centralForce":2,"edgePruning":100,"minNodeRadius":3,"maxNodeRadius":7,"info_showOrphanNodes":{"show":true,"name":"","description":"Show nodes that are not connected to any other nodes.","placeholder":""},"info_showAttachments":{"show":true,"name":"","description":"Show attachments like images and PDFs as nodes in the graph.","placeholder":""},"info_allowGlobalGraph":{"show":true,"name":"","description":"Allow the user to view the global graph of all nodes.","placeholder":""},"info_allowExpand":{"show":true,"name":"","description":"Allow the user to pop-out the graph view to take up the whole screen","placeholder":""},"info_attractionForce":{"show":true,"name":"","description":"How much should linked nodes attract each other? This will make the graph appear more clustered.","placeholder":""},"info_linkLength":{"show":true,"name":"","description":"How long should the links between nodes be? The shorter the links the more connected nodes will cluster together.","placeholder":""},"info_repulsionForce":{"show":true,"name":"","description":"How much should nodes repel each other? This will make disconnected parts more spread out.","placeholder":""},"info_centralForce":{"show":true,"name":"","description":"How much should nodes be attracted to the center? This will make the graph appear more dense and circular.","placeholder":""},"info_edgePruning":{"show":true,"name":"","description":"Edges with a length above this threshold will not be rendered, however they will still contribute to the simulation. This can help large tangled graphs look more organised. Hovering over a node will still display these links.","placeholder":""},"info_minNodeRadius":{"show":true,"name":"","description":"How small should the smallest nodes be? The smaller a node is the less it will attract other nodes.","placeholder":""},"info_maxNodeRadius":{"show":true,"name":"","description":"How large should the largest nodes be? Nodes are sized by how many links they have. The larger a node is the more it will attract other nodes. This can be used to create a good grouping around the most important nodes.","placeholder":""}},"sidebar":{"featureId":"sidebar","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"allowResizing":true,"allowCollapsing":true,"rightDefaultWidth":"20em","leftDefaultWidth":"20em","info_allowResizing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be resized","placeholder":""},"info_allowCollapsing":{"show":true,"name":"","description":"Whether or not to allow the sidebars to be collapsed","placeholder":""},"info_rightDefaultWidth":{"show":true,"name":"","description":"The default width of the right sidebar","placeholder":""},"info_leftDefaultWidth":{"show":true,"name":"","description":"The default width of the left sidebar","placeholder":""}},"customHead":{"featureId":"custom-head","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"featurePlacement":{"selector":"head","type":"end","info_selector":{"show":true,"name":"","description":"CSS selector for an element. The feature will be placed relative to this element.","placeholder":""},"info_type":{"show":true,"name":"","description":"Will this feature be placed before, after, or inside (at the beggining or end).","placeholder":"","dropdownOptions":{"Before":"before","After":"after","Start":"start","End":"end"}}},"info_featurePlacement":{"show":true,"name":"","description":"Where to place this feature on the page. (Relative to the selector)","placeholder":""},"info_includePath":{"show":false,"name":"","description":"","placeholder":""},"sourcePath":"","info_sourcePath":{"show":true,"name":"","description":"The local path to the source .html file which will be included.","placeholder":"","fileInputOptions":{"makeRelativeToVault":true,"browseButton":true}},"includePath":"site-lib/html/custom-head.html"},"document":{"featureId":"obsidian-document","enabled":true,"unavailable":false,"alwaysEnabled":true,"hideSettingsButton":false,"allowFoldingLists":true,"allowFoldingHeadings":true,"documentWidth":"40em","info_allowFoldingLists":{"show":true,"name":"","description":"Whether or not to allow lists to be folded","placeholder":""},"info_allowFoldingHeadings":{"show":true,"name":"","description":"Whether or not to allow headings to be folded","placeholder":""},"info_documentWidth":{"show":true,"name":"","description":"The width of the document","placeholder":""}},"rss":{"featureId":"rss","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":false,"siteUrl":"","authorName":"","info_siteUrl":{"show":true,"name":"","description":"The url that this site will be hosted at","placeholder":"https://example.com/mysite"},"info_authorName":{"show":true,"name":"","description":"The name of the author of the site","placeholder":""}},"linkPreview":{"featureId":"link-preview","enabled":true,"unavailable":false,"alwaysEnabled":false,"hideSettingsButton":true}},"modifiedTime":1758523802831,"siteName":"brain_obsidian","vaultName":"brain_obsidian","exportRoot":"","baseURL":"","pluginVersion":"1.9.2","themeName":"","bodyClasses":"publish css-settings-manager styled-scrollbars show-inline-title show-ribbon code-styler code-styler-style-inline code-styler-gutter-highlight is-focused","hasFavicon":false}